➜巧用 NAS 打造私有跨平台播客订阅服务
https://sspai.com/post/63610	19800
<p>NAS 可以实现的功能非常多，对我个人而言最为常用的功能应该是 Audio Station —— 通过手机客户端可以随时收听自己收藏、转制的音乐，不受平台限制。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2020/11/14/9c3796c777dac1e9fe64a5e7b7b749ba.png"><figcaption>Audio Station</figcaption></figure><p>不过与这个需求所对应的，不管是国内用得比较多的网易云还是国外更流行的 Spotify，都在传统音乐内容外做起了播客，即便它们严格意义上来说并不算是 Pocket Casts 那样的泛用型播客。</p><p>鉴于 Pocket Casts 桌面端需要额外购买高级会员且 iOS 客户端也已经在国区 App Store 下架，我便萌生了在 NAS 上搭建私有跨平台播客订阅服务的想法。</p><p>今天分享一下具体的解决方案：基于 Airsonic 的配置、管理与全平台播客收听方案。</p><h2>配置 Airsonic</h2><p>Airsonic 本质上和 Audio Station 这样的私人音乐库服务类似，但它的功能相比 Audio Station 更加丰富，除了可以处理保存在 NAS 的音乐文件，Airsonic 还额外支持播客管理和流播，完美符合我们的需要。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2020/11/14/c8c0b4efd1467d816b7128348120db10.png"></figure><p>选择 Airsonic 的另一个原因则在于其开源属性。如果你以前折腾过 NAS 云音乐库，很可能还听说过 <a href="http://www.subsonic.org/pages/index.jsp" target="_blank">Subsonic</a>，Airsonic 正是 Subsonic 完全闭源之后的开源分支，所以在一定程度上也能和 Subsonic 的接口实现兼容，这一点也将成为本文的关键。</p><h3>在低版本 Tomcat 上安装</h3><p>Airsonic 本身基于 Java 开发，所以如果你的 NAS 支持较高版本的 Tomcat（8.5 以上），那么将 Airsonic 最新发行版的 war 包部署到 Tomcat 就可以直接使用了，这里不再赘述。</p><p>考虑到我的群晖 NAS 上的 Tomcat 还是 7.x 版本，安装更加复杂一点，这里便着重介绍一下低版本 Tomcat 的配置方法：通过 Docker 镜像部署。</p><p>安装前，我们首先需要创建好相关目录。首先在根目录新建一个专门的播客文件夹 Podcast：打开「控制面板 &gt; 共享文件夹」，然后点击「新建 &gt; 新增」并创建新的「共享文件夹」。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2020/11/14/4ec0bbd39bc5e4bda7a374fc8047c436.png"><figcaption>创建共享文件夹</figcaption></figure><p>需要注意的是在创建过程中需要对权限进行调整，比如在自己使用的账户 admin 这里勾选上「可读写」权限，完成之后等待系统生成目录即可。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2020/11/14/38a551a50b1c88ed86312b182d496568.png"><figcaption>注意权限设置</figcaption></figure><p>接下来则是安装 Docker，这个不妨去「套件中心」搜索安装。安装完成后打开 Docker，在侧边栏点击「注册表」，然后在搜索框中搜索「Airsonic」，找到 airsonic/airsonic 并点击右键选择「下载此映像」。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2020/11/14/e095ac81e28dc18c6a6c2656e81f2078.png"><figcaption>搜索下载</figcaption></figure><p>映像下载完成之后，在「映像」里面找到下载的 「airsonic」映像并双击开始部署。在「常规设置」里面对这个 Docker 容器重新命名，然后打开高级设置进行调整。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2020/11/14/3f2dafdd4405ea0807f94c4966f8a75d.png"><figcaption>Docker 配置</figcaption></figure><p>切换到「端口设置」选项卡，这里有个比较重要的端口就是「容器端口 4040」；本机端口映射我选择了 10040，依次类推其他的端口我都采用了 100xx，方便后面在本地部署跳转。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2020/11/14/6636669e046cd0113d8604639b3de460.png"><figcaption>路径映射</figcaption></figure><p>再切换到选项卡「卷」中，这里就是设置容器路径如何映射到 NAS 的路径，所以「转载路径」对应的是容器的路径，而「文件/文件夹」对应的就是 NAS 的真实路径。我的音乐和播客都保存在根目录下面，所以「文件/文件夹」对应的就是根目录；至于数据相关文件，我在 Docker 文件夹下面新建了一个 「airsonic」文件夹，所以 data 数据都会保存到「docker/airsonic」中。</p><p>设置完成后点击「应用」，这里高级设置就完成了。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2020/11/14/523c7208241cfc07a3f302291f9e12d0.png"><figcaption>配置完成</figcaption></figure><p>最后检查一下容器的「摘要」，然后勾选「向导完成后运行此容器」，最后点击应用生成并启动容器。</p><p>这里稍微等几分钟（容器启动会比较慢），然后在浏览器中输入 <code>http://&lt;nas 的内网 IP 地址&gt;:10040</code> 然后打开 Airsonic，看到以下的登录页面就算是成功了。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2020/11/14/1b4c8352d492bde93e93c71771f06290.png"><figcaption>这样就配置成功了</figcaption></figure><h3>使用 frp 实现外网访问</h3><p>可以通过本地局域网运行之后，我们当然希望在外网也能访问部署在内网的 airsonic。这里我采用的办法依旧是万能的 frp，关于 frp 的基础设置可以参阅 <a href="https://sspai.com/post/60852" target="_blank">这篇文章</a>。</p><p>假设你已经在 NAS 上部署好 frp 的客户端，接下来需要做的就是对现有配置文件进行修改，添加一部分有关 airsonic 的字段来实现外网访问：</p><p>打开 NAS 上的 frpc 配置文件（我这里默认保存在 docker/frpc 这个文件夹中），在 NAS 上的文件管理器上选择 frpc.ini 并使用「文本编辑器」打开，在最后加上这么一段配置：</p><pre class="language-"><code>[Airsonic]
type = tcp
local_ip = 127.0.0.1
local_port = 10040
remote_port = 6044</code></pre><p>保存并重启 frpc 容器，然后应该就可以使用 <code>https://你的外网 IP:6044</code> 从外网访问你的 airsonic 服务了（如你的 VPS 有防火墙记得放行相关端口）。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2020/11/14/ae0d3377bfdb7cfb8527a1aad4bfed33.png"><figcaption>配置 frpc 文件</figcaption></figure><h2>在 Airsonic 上管理</h2><p>在浏览器打开 Airsonic ，首先使用默认用户名 admin 以及密码 admin 登录，然后我们可以根据提示一步步完成初始化操作（实际上主要还是修改默认的管理密码），如果平时主要只是你自己使用，这里设置一个账号即可。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2020/11/14/4e316fbdbd77e4765439c4baef55c02e.png"><figcaption>初次使用向导</figcaption></figure><p>虽说 Airsonic 主要是用来管理 NAS 音乐库的软件平台，但我们使用 Airsonic 的目的还是使用其中的播客模块。所以在设置中我们首先需要对 Podcast 部分进行设置，选择「设置 &gt; 播客」选项卡，然后对播客下载和管理这部分进行设置，例如检查新节目是自动还是手动、保留节目的集数、下载保存路径等等，设置完成之后记得点击「保存」。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2020/11/14/4fb4e18650935bc1c2143f7e74ded028.png"><figcaption>配置播客选项</figcaption></figure><p>接下来我们点击顶部选项卡中的「播客」，然后滚动到页面最下面的「订阅播客」，然后开始将自己此前订阅的播客的 RSS 地址一个个贴上去并点击「确定」，需要说明的点击订阅之后 Airsonic 不会立刻显示对应的播客名称等信息，你可以手动刷新页面来看是否成功。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2020/11/14/fed3f5da3f375680876c5c4efe0d0f21.png"><figcaption>添加播客订阅</figcaption></figure><p>对于一些已经托管到网易云以及喜马拉雅（采用非标准的 xml 导致无法使用泛用性客户端订阅）的播客节目，我采取的方法是在 NAS 上使用 Docker 再部署 <a href="https://docs.rsshub.app/">RSSHUB</a>，将生成的订阅地址粘贴到 Airsonic 来完成订阅。</p><p>注意，这里生成的地址可以使用 NAS 的自己的 localhost 加端口号，例如 <code>http://127.0.0.1:1200/xxxx</code> 这样的格式。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2020/11/14/53de8df953e3e88b379e8dac723a4fd9.png"></figure><p>如果设置都正确的话，你会在「播客」看到已经完成订阅的播客节目 logo，并且会根据此前的设置开始下载，所以当你点击进入到某一个播客中会看到节目列表，你可以点击节目前的播放按钮将其添加到播放列表中。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2020/11/14/a98954116e32232b214807a456854f18.png"></figure><h2>在各平台上收听</h2><p>在网页端设置完成之后，我们就可以使用客户端来访问 Airsonic 搭建的播客订阅平台并进行收听了。由于 Airsonic 并没有所谓的官方客户端，因此在部分平台访问还需借助第三方应用。</p><h3>Android：DSub for Subsonic</h3><p>因为我们主要用 Airsonic 管理播客订阅，相比只是通过 Airsonic 访问音乐库的需求而言，第三方客户端的选择要少很多，很多第三方客户端并不支持播客管理功能。</p><p>最后我在 Android 平台上找到了 DSub for Subsonic。</p><p>第一次打开 DSub for Subsonic 会首先打开一个 demo 服务器，这里我们将自己的服务器添加进来：打开侧边栏，然后在「setting &gt; server」中点击「add server」新建一个服务器。需要注意的是在「server address」 中需要将端口号也要加上去（对应的当然使用的 frp 映射出来的公网地址），另外用户名和密码也可以在这里添加好，其他保持默认。</p><p>最后点击「test connection」测试，如果显示 OK 就没问题了。</p><figure class="ss-imgRows" figcaption=""><img src="https://cdn.sspai.com/2020/11/14/55dffeeecc2163eb37fd6fa616729185.jpg" alt=""><img src="https://cdn.sspai.com/2020/11/14/1395b8a721866399fbb9d56e798585eb.jpg" alt=""></figure><p>然后回到侧边栏点击账号下面的三角切换到新添加的 Airsonic 服务器，稍等一会儿侧边栏中就会出现 Podcast 项目，点击进去应该就可以看到前面我们订阅的所有的播客节目了。点击一个节目播放可以看到类似泛用型播客客户端的播放控制界面，实际使用上也基本无差。</p><figure class="ss-imgRows" figcaption=""><img src="https://cdn.sspai.com/2020/11/14/d38cf1473054b8c99ddf219ab1b0cf06.jpg" alt=""><img src="https://cdn.sspai.com/2020/11/14/21fc9c60429cc2069a2fecefaad57795.jpg" alt=""></figure><p>DSub for Subsonic 在 <a href="https://play.google.com/store/apps/details?id=github.daneren2005.dsub&amp;hl=en_US&amp;gl=US">Play Store</a> 上是一款收费应用，当然你也可以直接在其项目的 <a href="https://github.com/daneren2005/Subsonic" target="_blank">GitHub</a> 上免费下载安装包来自行安装。</p><span class="ss-application" app-id="15828">&nbsp;</span><h3>iOS：AVSub</h3><p>我试过多款 iOS 上的 Airsonic 客户端，但支持播客的却只有这款名为 AVSub 的付费应用，虽说收费，但设计上符合 iOS 14 主流的设计规范，交互上非常的简单易懂（但没有中文）。</p><figure class="ss-imgRows" figcaption=""><img src="https://cdn.sspai.com/2020/11/14/ed4f096c47668d12fafd13bd2eeaa5d9.PNG" alt=""><img src="https://cdn.sspai.com/2020/11/14/6f8d68a4b95430aee9737e455da50a75.PNG" alt=""></figure><p>打开应用首先找到下方的「Setting」，然后在「Server Setting」中输入我们刚刚新建的Airsonic 服务器对应的公网 IP 以及端口号、用户名、密码等信息，最后点击「Connect」。成功之后稍等片刻，首页中的多个项目就会变成高亮，尤其是我们关注的 Podcast 部分。</p><figure class="ss-imgRows" figcaption=""><img src="https://cdn.sspai.com/2020/11/14/bfc25d01ba2f3a14a2772172f47031a5.PNG" alt=""><img src="https://cdn.sspai.com/2020/11/14/c39ddd98c14f1a011b6851b3a7f6e6e2.PNG" alt=""></figure><p>在 AVSub 中，Podcast 部分采用了更加适合手机的单列表排列的方式来显示所有的播客源，并且会根据你在服务器上的设置来显示或者下载播客集数，播放页面则和很多播放应用的 UI 类似，甚至还支持隔空播放功能。</p><p>AVSub 国区 <a href="https://apps.apple.com/cn/app/avsub/id923424694" target="_blank">App Store</a> 售价为 25 元，没有其他内购。</p><span class="ss-application" app-id="15829">&nbsp;</span><span class="ss-application" app-id="15829">&nbsp;</span><h3>桌面端：Web 应用</h3><p>桌面端我并没有使用所谓的第三方应用（实际上所有的第三方桌面客户端体验都不如网页端直接），Airsonic 的网页端除了管理之外自然也有一部分播放功能，虽然比起那些专业的播客播放器要逊色不少，但基本播放功能还是能够满足我的需求。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2020/11/14/00419662959cd8556ad5ba3e3c5d24ab.png"></figure><p>考虑到跨平台使用，我将其添加为 Chrome 应用来实现同步，具体设置方法为「更多设置 &gt; 创建快捷方式」，然后就可以在 Chrome 应用中找到 Airsonic 了。如果想要在其他电脑上安装就在右键菜单中通过「在此设备上安装」完成。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2020/11/14/667f0fbbee3fe2b7d164df0c93f3d4ec.png"></figure><h2>结语</h2><p>经过以上的操作，我基本上实现了个人订阅播客的全平台同步，无论是 Android、iPad、iPhone 还是桌面端，都可以基于 NAS 收听已订阅播客。</p><p>当然最重要的一点在于，同步平台基于自己的 NAS 所构建，稳定性在一定程度上甚至要比基于公有云的同步平台稳定得多，同时也无需支付各类播客应用的订阅费用。</p><p style="margin-left:0px;">&gt; 下载少数派 <a href="https://sspai.com/page/client">客户端</a>、关注 <a href="https://sspai.com/s/J71e">少数派公众号</a>，发现更多实用 NAS 玩法 🔧</p><p style="margin-left:0px;">&gt; 特惠、好用的硬件产品，尽在 <a href="https://shop549593764.taobao.com/?spm=a230r.7195193.1997079397.2.2ddc7e0bPqKQHc">少数派 sspai 官方店铺</a> 🛒</p><p>© 本文着作权归作者所有，并授权少数派独家使用，未经少数派许可，不得转载使用。</p>
➜属于 Android 自由软件的商店，F-Droid 使用指南
https://sspai.com/post/63647	24765
<h3>Matrix 首页推荐</h3><p><a href="https://sspai.com/matrix">Matrix</a> 是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。</p><p>文章代表作者个人观点，少数派仅对标题和排版略作修改。</p><hr><p>F-Droid 是一款专门收录各类自由软件的 Android 应用商店。刚刚度过十岁生日的它，仍然只流行于自由软件爱好者圈子内，这多多少少埋没了其中数以百计的优质应用。事实上，相较于境外的许多应用商店，F-Droid 不仅在国内更易访问，而且更加安全。虽然不能开箱即用，F-Droid 的使用配置并不复杂。</p><h2>一、添加国内源和存储库</h2><p>从<a href="https://f-droid.org/">官网</a>处下载 F-Droid 并打开后，首先需要调整存储库设置。F-Droid 管理应用的方式类似于各大 Linux 发行版。存储库是一系列应用的列表和安装包的集合，由开发者或者机构维护。同一存储库在世界各地分设服务器供用户就近下载，可以理解为源。F-Droid 默认使用一个收录应用最多的、和软件同名的库，其访问与下载速度通常相当缓慢。所幸目前已经有了 F-Droid 的国内源，添加后可大幅度改善境内的访问和下载体验。</p><p><strong>手机访问</strong><a href="https://mirrors.tuna.tsinghua.edu.cn/help/fdroid/">清华大学开源软件镜像站</a>，使用 F-Droid 打开第一行的长链接，在弹出界面中点击添加镜像。也可以复制长链接，在应用⚙设置 - 存储库中，点击右上角的加号手动添加。添加完成后，还需要选择存储库中的第二个 F-Droid 库，只保留刚才添加的用户镜像，其他镜像悉数关闭，保证软件只从国内镜像站获取更新。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2020/11/17/d818e4752c05c7d256d7e6781930b829.jpg"></figure><p>这一步完成后，境内用户即可通过商店方便地下载和更新应用。初次使用，许多用户都会疑惑为何在其中搜索不到 Firefox 等「自由软件」。这是由于 F-Droid 官方库对收录软件的要求非常严格，Firefox 等含有一些专有代码的应用并不被认定为自由开源。此外，也有一些诸如 Bitwarden 的开源软件尚未被官方收录。这些问题可以通过添加第三方存储库解决。<a href="https://forum.f-droid.org/t/known-repositories/721">官方论坛中的此贴</a>列出了大部分已知的第三方库。添加存储库的方式和前述添加国内源的方式基本一致，推荐添加 <a href="https://android.izzysoft.de/repo/info">IzzyOnDroid</a>，<a href="https://gitlab.com/rakshazi/fdroid">Rakshazi F-Droid</a>。这些第三方库并无国内源，所以下载速度不及官方库。</p><h2>二、选择更美观的客户端</h2><p>F-Droid 官方客户端设计并不美观，各类功能也只能说差强人意，但是得益于自由软件的开放特性，F-Droid 拥有众多的第三方客户端，并且都能通过 F-Droid 官方客户端下载。相较于官方，这些第三方客户端往往更加漂亮，有的还提供了一些有用的功能。如果你并不在乎是否有中文界面，那么我更加推荐两个下面客户端。</p><p><a href="https://f-droid.org/en/packages/nya.kitsunyan.foxydroid">Foxy Droid</a>，官方客户端主页是大图标式排列应用，而图标大大小小，应用介绍挤在不多的空隙中，很难称得上优雅。而 Foxy Droid 将排列模式改成了列表，删除了诸如离线传输等不常用功能，整个设计显得更加简约合理。它还给每一个应用单独设置了是否更新的选项，用户可以选择永久忽略某一应用的更新。缺点是没有中文界面，不可以用中文搜索。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2020/11/17/745c4624931446b6349e478776c8580a.png"></figure><p><a href="https://f-droid.org/en/packages/com.aurora.adroid">Aurora Droid</a>：Aurora Store 的姊妹应用。界面类似于 Google Play，Material Design，颜值力压众多竞品。功能也较为完善，提供了收藏，黑名单。客户端还默认列出了许多第三方库，不需要去官网一个个添加，只需要在库设置中启用即可。由于是 Aurora 系列应用，可以通过安装 Aurora Services 的方式实现静默安装。同样没有中文界面。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2020/11/17/40691b101ce2a7a9349b04e0c86d6689.jpg"></figure><h2>三、应用的搜索和下载</h2><p>前面提到，F-Droid 官方库只收录自由软件。在收录的自由软件中，官方特别标示了一些带有垃圾特性（anti-feature）的应用，默认无法被搜索到。需要在⚙设置 - 应用兼容性 - 包括带有 anti-feature 的应用中调整。所谓垃圾特性，并不意味着被标志的应用必然有害，而是指对用户会造成潜在危害的功能，例如应用中含有推广，非完全自由，有需要用户刻意关闭的数据上传服务等。以 Telegram 为例，尽管客户端是自由软件，但由于上游服务器并不开源以及含有推广服务，被认定为带有垃圾特性。普通用户并不需要在意这些问题。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2020/11/17/6715c453aab865e6ffb80aaa52b455ba.jpg"></figure><p>尽管官方客户端有中文界面，但应用的搜索对中文支持并不好。这大概是因为 F-Droid 收录的鲜有中文软件，软件的介绍大多也是英文。如果中文无法搜索到内容，建议改用英语。此外，软件搜索范围是应用包名和介绍，并且没有主流应用商店那样的模煳搜索功能，如果某软件的功能介绍比较隐晦，你可能很难从搜索中发现它。Firefox 的自由软件版本 Fennec 就是这样。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2020/11/17/835b6a193880891a69b4833e08e3c870.jpg"></figure><p>克服这些小毛病后，F-Droid 的种种好处逐渐显露出来。软件商店中的应用包绝大部分直接从源码编译而来，商店在应用介绍中注明了该软件采用的许可证和源码的获取方法，用户在安全和隐私方面无需担心。一些开发者还会为 F-Droid 单独发布一个分支，不同于发布在 Google Play 等处的版本，F-Droid 中的应用包没有来自 Google 跟踪，也没有内购和收费。摆脱了 Google 条约的束缚，开发者们还可以在 F-Droid 上发布类似无广告的 YouTube 前端，广告拦截软件等无法在 Play 商店上架的应用。</p><figure class="image ss-img-wrapper"><img src="https://cdn.sspai.com/2020/11/17/f848d88339ff848397559099bd09fb20.jpg"><figcaption>Nextcloud 在 Play 商店中收费</figcaption></figure><h2>四、发现 F-Droid 的优质应用</h2><p>对于并不标榜 No-Google 和自由软件精神的用户来说，F-Droid 最有用的一类应用就是主流服务的第三方客户端。Aurora Store 是无需登录 Google 帐号和服务的 Play Store，NewPipe 是功能齐全的 YouTube 开源前端，Slide 是轻量的 Reddit 客户端。对于希望摆脱 Google 的自由软件爱好者而言，F-Droid 也有许多不需要 Google 服务即可运行的应用，例如无需 Google 也能正常运行的二次验证软件 FreeOTP。</p><p>除此以外，F-Droid 收录的几千个软件中有很多是未被国内用户发掘的优质应用。倘若喜爱尝试新应用，下面这些帖子或列表也许值得一看：</p><ul><li>GitHub：<a href="https://github.com/offa/android-foss">Android Foss</a>（并不全是 F-Droid 应用）</li><li>小众软件：<a href="https://meta.appinn.net/t/topic/15095">F-Droid 软件推荐</a></li></ul><p>&gt; 下载少数派 <a href="https://sspai.com/page/client">客户端 </a>、关注 <a href="https://sspai.com/s/J71e">少数派公众号 </a>，了解更妙的数字生活 🍃</p><p>&gt; 想申请成为少数派作者？<a href="https://sspai.com/apply/writing" target="_blank">冲！</a></p><p>© 本文着作权归作者所有，并授权少数派独家使用，未经少数派许可，不得转载使用。</p>
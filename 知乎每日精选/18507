➜如何评价国产游戏《帕斯卡契约》？
http://www.zhihu.com/question/366446052/answer/1449166816?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title	41411
<p>8月20日，《帕斯卡契约》的全新DLC剧情扩展包<b>「遗忘之潮」正式上线。</b>作为第一个登上苹果发布会，成为iPhone11 展示游戏的本土手游，《帕斯卡契约》注定一出场就受万众瞩目。这款游戏被苹果评价为<b>“口袋里的3A级大作”</b>，于2020年1月16日AppStore全球同步上架，市场表现也着实没有让人失望。TapTap数据显示，1月15日《帕斯卡契约》的预约人数是599,249，评分9.6；1月17日该作上线一天后，预约数破60万，评分仍是9.6。</p><p><img src="https://pic1.zhimg.com/v2-9845b879aa23468412ac487e8c90d0ae_720w.jpg?rss" data-caption="" data-size="normal" data-rawwidth="4000" data-rawheight="2250" data-watermark="original" data-original-src="v2-9845b879aa23468412ac487e8c90d0ae" data-watermark-src="v2-13c5ba6fc1d6201f74d8da4563366913" data-private-watermark-src="v2-7bbce8956fbb2f47e94cbcbd29d4617a" style="max-width: 400px;"></p><p>新DLC将带来更宏大的地图和更丰富的场景细节。此外，新角色杰洛尔德也将加入战斗阵营，他拥有一套全新的招式系统，其战斗思路和风格与现有角色截然不同。资料片中还有众多新的敌人，新的BOSS，包括隐藏BOSS，都十分值得期待。 </p><p>《帕斯卡契约》由<b>TipsWorks工作室</b>创作，该游戏强悍的画质表现是几乎被所有玩家点名表扬的，但是大部分玩家都不知道的是，《帕斯卡契约》完全基于Unity引擎开发。自今年Unity公布携手《帕斯卡契约》亮相ChinaJoy之后，我们也收到了部分留言，大家表示希望能够更深入地了解游戏制作的细节。今天，我们就专门采访了TipsWorks创始人、《帕斯卡契约》制作人杨洋，让他亲自给大家揭秘。</p><p><img src="https://pic1.zhimg.com/v2-5614a4312333b91978e9b4cc471ef47a_720w.jpg?rss" data-caption="" data-size="normal" data-rawwidth="1014" data-rawheight="502" data-watermark="original" data-original-src="v2-5614a4312333b91978e9b4cc471ef47a" data-watermark-src="v2-1eeee3d2af01118a5f1cf929ad7ff95f" data-private-watermark-src="v2-43825aff052189e694af9be1f8fe6b52" style="max-width: 400px;"></p><p><br></p><p><b>1. 可以简单的介绍下TipsWorks创作帕斯卡契约这款游戏的初衷和背景吗？</b></p><p>立项的初衷是因为市场上已经没有合适的空间给一个小团队去生存，所以我们想要创造一款手机上没有的游戏，从画面到玩法上更像一款真正的主机游戏。这可能是一件很困难的事，但是基于我们当时对Unity引擎通过几个项目的积累，感觉可以挑战一下试试，结果一试就做到了今天。</p><p><img src="https://pic1.zhimg.com/v2-ff65eef6a7293c52c835afb9833ff37a_720w.jpg?rss" data-caption="" data-size="normal" data-rawwidth="2294" data-rawheight="1452" data-watermark="original" data-original-src="v2-ff65eef6a7293c52c835afb9833ff37a" data-watermark-src="v2-37332bc1c100ed9d014d60fde4decc11" data-private-watermark-src="v2-5a45c20e52385fc1bad9774139a15672" style="max-width: 400px;"></p><p><br></p><p><b>2. 帕斯卡契约出色的画质，让苹果在推荐中也毫不吝啬自己的赞美之词“主机级画质”、游戏中各种粒子特效、光影、材质细节、在手机游戏中都非常的拔尖，关于使用Unity制作渲染3A级别的手游有哪些经验可以跟大家分享下吗？</b></p><p>关于这一点，其实可能和大家理解的并不一样，<b>Unity引擎本身就可以制作非常强大的影视级3A画面</b>，我们做的更多的工作是如何把这些好的效果进行优化并尽量保留下来。基于Unity对手机平台的适配相当友好和高效，节省下来的性能空间还可以用来实现更大的地图和更高的AI。对于手游来说，如何压榨出手机硬件的机能极限是我们的关键。</p><p><img src="https://pic1.zhimg.com/v2-da853417ba4cac1008bdf47888207cbe_720w.jpg?rss" data-caption="" data-size="normal" data-rawwidth="2574" data-rawheight="1440" data-watermark="original" data-original-src="v2-da853417ba4cac1008bdf47888207cbe" data-watermark-src="v2-ca45d41366dee5d712d70bb94d3de241" data-private-watermark-src="v2-f66314e463cc71c8a893fadc0c5b421f" style="max-width: 400px;"></p><p>一般的主流动作手游，通常采用一个个独立小舞台。而帕斯卡契约的场景，非常巨大，视野所及范围几乎都是可探索区域。一次需要读取一两个小时流程的地图和所有部署的敌兵及NPC。所以我们必须解决图形运算极限和内存容量问题。在整个地表层，我们对物件进行了严格的细分，通过主要物体和次要物体之间的视觉优先关系，结合视野进行人工的反复调整。另一方面，我们为了节省lightmap，场景里的一些小物件使用了light probe对物体进行着色。场景上尽可能的减少lightmap的数量从而达到合批的效果，减少drawcall。我们认为，想要达到效率最佳的深度优化，一定是耐心细致和技术工具的结合成果。</p><p><img src="https://pic1.zhimg.com/v2-8c9eb555906c80530338e003f3e274aa_720w.jpg?rss" data-caption="" data-size="normal" data-rawwidth="1080" data-rawheight="540" data-watermark="original" data-original-src="v2-8c9eb555906c80530338e003f3e274aa" data-watermark-src="v2-3dc74df54927ea3a9211a834e6535042" data-private-watermark-src="v2-d1dc3daf63c3b5d0031fa095fb354c2e" style="max-width: 400px;"></p><p><br></p><p><b>3. 男一号主角的泰伦斯相信会成为大家使用最多的角色，他能够使用两把武器，轻攻击是使用手杖或者说是刺剑进行快速的攻击。而重攻击则是使用双手的大剑进行攻击。可以简单跟开发者们介绍下如何使用Animator Controller管理主角泰伦斯各段动画以及动画之间的切换的呢？</b></p><p><img src="https://pic1.zhimg.com/v2-8654501a01f0924f17305cd05014a7d5_720w.jpg?rss" data-caption="" data-size="normal" data-rawwidth="1268" data-rawheight="588" data-watermark="original" data-original-src="v2-8654501a01f0924f17305cd05014a7d5" data-watermark-src="v2-7a2754456cb92d4f5a088247912f87a6" data-private-watermark-src="v2-b289207357137e7a0cf45fa5eeaf224a" style="max-width: 400px;"></p><p>Unity的<b>Animator Controller</b>为项目动画管理提供了很好的支持。就泰伦斯而言，大量的动作片段可以通过State Machine进行节点可视化的分类，排列在Animator Controller面板中，并通过Animation Parameters配合动画资源中自定义Curves的调用，比如攻击连招之间的切换，让程序从逻辑代码上控制并实现State Machine 之间的融合过渡和功能应用。另外 State Machine 分类中的Blend Tree是个很好用状态机类型，我们在角色最基础的位移、受击、闪避等类似多方向的动作实现方面，通过同时定义多个参数实现动作切换融合。另外我们通过设置Animation Layers的骨骼MASK制作角色局部动画类似行走中实现不同的上半身动画等等。</p><p><img src="https://pic1.zhimg.com/v2-26d76e5c8fa9345c6d327a334e73e861_720w.jpg?rss" data-caption="" data-size="normal" data-rawwidth="1268" data-rawheight="629" data-watermark="original" data-original-src="v2-26d76e5c8fa9345c6d327a334e73e861" data-watermark-src="v2-9f2f3a8d3cccc6cb264a2ce1fd2dfd14" data-private-watermark-src="v2-d29fcf41b4107e18c237bc488f16151e" style="max-width: 400px;"></p><p><br></p><p><b>4.</b> <b>流畅、连贯的动作是ARPG 的核心，据我所知游戏人物动作方面，没有采用动作捕捉技术，而是全靠动作师手工调制的，这是一个相当大的工程量了，你们是如何克服的呢，有哪些技巧与经验可以跟大家分享吗？</b></p><p>是的，没有采用任何动作捕捉。对于一个动作游戏本身，需要精密的以帧为单位控制每一个招式的动作准确性，动作捕捉反而会带来一定的困扰，最终我们选择了全部手动来制作。工程量确实巨大，所幸Unity引擎内新的动画模式为我们的人形角色骨骼匹配提供了很好的基础，帮我们大大提高了工作效率。</p><p>Unity的<b>Humanoid的模式</b>下，可以完美识别并适配相应的骨骼节点。此模式下，在优化骨骼内存占用的同时，也方便程序在游戏中调用节点。同时Humanoid的Animation属性面板里，提供了对动画片段不同轴向的旋转和位移坐标的修改，最大化了动画资源的重复利用率。</p><p><img src="https://pic1.zhimg.com/v2-3719b6156fc4d0491a06e8172e737274_720w.gif?rss" data-caption="" data-size="normal" data-rawwidth="900" data-rawheight="697" data-watermark="original" data-original-src="v2-3719b6156fc4d0491a06e8172e737274" data-watermark-src="" data-private-watermark-src="" style="max-width: 400px;"></p><p><br></p><p><b>5. 帕斯卡契约中维奥拉的设定是一位有着高贵气质的落难少女，在游戏人物模型创作过程中是如何与游戏的故事情节进行融合的？</b></p><p>在帕斯卡契约的世界中，整体调性偏向于阴郁沉重，设计上需要一名相对活跃靓丽的女性角色来改变一下玩家的心情，所以维奥拉很早就登场了。起初我们的维奥拉设计比现在更加接近“贵族”气质，拥有一顶华丽的大帽子，最后发现游戏操作时帽子太大会遮挡玩家视野，忍痛改掉了这一设计。实际上这也是我们整个游戏中最早和主角一起确认的角色，脸部模型进行了好几版的修改，我们想让维奥拉形象能得到玩家喜爱，又不想去做一张手游上常见的网红脸，所以这上面花了很多功夫。在故事里，维奥拉也是事件的核心，她的故事线也给这个角色附上了独特的个性气质。我们最初以为人气最高的可能会是造型更加鲜明的特蕾莎，最后发现还是年轻的单身女孩受欢迎啊~</p><p><img src="https://pic1.zhimg.com/v2-4ad115a80c6f7a1507ee356be44b8ae1_720w.jpg?rss" data-caption="" data-size="normal" data-rawwidth="1266" data-rawheight="560" data-watermark="original" data-original-src="v2-4ad115a80c6f7a1507ee356be44b8ae1" data-watermark-src="v2-998b7be546f40647510b838714344aea" data-private-watermark-src="v2-4de4900d5940ee22f480cedf4b8c4ebe" style="max-width: 400px;"></p><p><br></p><p><b>6. 除了对高贵漂亮的维奥拉本人喜爱外，关于游戏中逼真的武器道具广大开发者也很感兴趣，可以简单的分享下如何在Unity中实现PBR材质道具的流程吗？</b></p><p>除了武器之外，我们游戏里很多物件都使用到了PBR材质。</p><p>流程上，首先需要在<b>Substance Painter</b> 中对材质进行写实的绘制，绘制方法主要遵循PBR的基本流程。由于手机游戏的贴图使用有限，我们把重点放在在质感的调节上。我们深入研究了Unity的材质显示特征，做好Substance Painter与Unity的衔接。从性能角度出发，主要用到的贴图有三种：diffuse，specular 和normal 。金属度和粗糙度分别加在diffuse specular这两种贴图的通道中调整。从而在Unity中得到一个消耗极低的写实的材质效果。</p><p><img src="https://pic1.zhimg.com/v2-1b594f34429273066db9797aae6f739d_720w.jpg?rss" data-caption="游戏中的其他PBR物件" data-size="normal" data-rawwidth="1266" data-rawheight="770" data-watermark="original" data-original-src="v2-1b594f34429273066db9797aae6f739d" data-watermark-src="v2-2b9b5e5325dda64c771902226f341e38" data-private-watermark-src="v2-3d8805888a050dd5b26f474f6281968c" style="max-width: 400px;"></p><p><br></p><p><b>7. 帕斯卡契约在手机上运用了大量的即时演算和实时渲染，且没有明显的卡顿和发热，研发团队的技术实力是比较突出的，关于Unity 游戏在iOS 平台的优化经验有哪些可以跟大家分享下呢？</b></p><p>我们开发过程中得到了苹果Metal团队很大的帮助，Metal是十分高效能彻底发挥iOS设备性能的API，Unity本身<b>对Metal的支持</b>也十分完善，这两者的结合会让游戏的运作更加高效。如果说有什么经验可以分享，我们在开发iOS版的过程中，大量用到苹果自己的“GPU Frame Capture”这个工具，它能够帮你分析和找出游戏中所有对性能有影响的细节，针对性的对工程提出优化。</p><p>例如：用XCode的<b>Capture GPU Frame </b>功能可以非常方便的抓取一帧GPU的快照信息，可以完整的查看Metal底层的渲染过程。图中我们发现了在屏幕后期处理结束之后StoreAction处理上有些问题造成了带宽上的浪费，图中紫色感叹号的警告也可以很容易地定位问题所在。然后我们通过代码脚本在Camera初始化时用RenderTarget重新设置了StoreAction，再次用Capture GPU Frame查看后，发现问题得到顺利解决。带宽使用上得到了优化，一定程度上改善了手机运行时发热的问题。合理的利用此类侦测工具，可以更有效的帮助开发者锁定问题，找出优化思路。</p><p><img src="https://pic1.zhimg.com/v2-92f7953df52434221fb0f7adfa987d54_720w.jpg?rss" data-caption="" data-size="normal" data-rawwidth="1222" data-rawheight="902" data-watermark="original" data-original-src="v2-92f7953df52434221fb0f7adfa987d54" data-watermark-src="v2-4adabfcb0f1c7bceeabd7758b7b821bb" data-private-watermark-src="v2-523573dfb2cc762f83f2316847c475cf" style="max-width: 400px;"></p><p><br></p><p><b>8.</b> <b>细心的玩家可以发现帕斯卡契约中的AI怪物不像一般手游里那样无脑往前冲，靠数值来牵制你。这无疑增加了游戏的可玩性与挑战性。可以跟大家分享下帕斯卡契约中敌人AI的设计吗？</b></p><p><img src="https://pic1.zhimg.com/v2-b4879e409251260e14914d964aebe3f5_720w.jpg?rss" data-caption="" data-size="normal" data-rawwidth="1050" data-rawheight="784" data-watermark="original" data-original-src="v2-b4879e409251260e14914d964aebe3f5" data-watermark-src="v2-61314e7f005d9503751633c3c4f21038" data-private-watermark-src="v2-9b6b925a5406153e9775b5c1cee80747" style="max-width: 400px;"></p><p><img src="https://pic1.zhimg.com/v2-904756de0f2bbb4c70b628cfdcc6773f_720w.jpg?rss" data-caption="" data-size="normal" data-rawwidth="1062" data-rawheight="796" data-watermark="original" data-original-src="v2-904756de0f2bbb4c70b628cfdcc6773f" data-watermark-src="v2-62fa7b3441a91a7de4f72ed4236191d2" data-private-watermark-src="v2-905532f8770345b2a7f801260c589d7f" style="max-width: 400px;"></p><p>我们在游戏里面给怪物做了一些<b>AI的判断逻辑</b>，让它们变得更“聪明”了。比如，它有自己的巡路逻辑，这并不是简单的平地上的直接巡逻，它可能会爬上屋顶，然后可能会从屋顶跳下来，也有可能从地下爬上来，有各种各样的空间交叠。因此我们在正常的A型算法的基础上，又增加了很多高空的预测路线，在主角靠近的时候怪物会自己选择一个比较安全的点跳下来。这样看上去，怪物好像是更“聪明”了，实际上只是我们把背后的算法设计的特别周密，看上去比较自然、而且排除了可能的bug点，我们有专门的AI程序员会去设置这种路线。</p><p><br></p><p><b>9.</b> <b>从Unity 2017.1 开始，Timeline 系统经过了多次迭代，易用性与功能都有了很大的改善与提高，可以跟大家分享下新的Timeline系统对项目有哪些帮助和提升？</b></p><p><img src="https://pic1.zhimg.com/v2-4283ed503c46127ae31ea9caf1a81e4c_720w.jpg?rss" data-caption="" data-size="normal" data-rawwidth="1411" data-rawheight="793" data-watermark="original" data-original-src="v2-4283ed503c46127ae31ea9caf1a81e4c" data-watermark-src="v2-7b317a88255d0bbc8319313661e12085" data-private-watermark-src="v2-ea0646e00380f8db0466fd244f171729" style="max-width: 400px;"></p><p>其实最初我们开发项目的时候没有用Timeline，早几年的Unity版本对Timeline 的支持做的没那么完善，就没有用。后来也因为这件事给我们的开发人员造成很大的困扰，因为编很多东西都需要在引擎里面去写。后来在Unity 升级迭代之后，整个Timeline 机制都优化了很多，那个时候也有纠结，因为如果要用新版本，程序就要把很多东西推翻重做。但后来我们考量这个Timeline之后，觉得还是要用，因为它会对我们故事的叙事流程有很大的帮助。然后我们的程序就忍痛把很多之前做的代码都删了，就为了一个动作可以<b>用Timeline 表现做得更好</b>。</p><p>这也是一个组内的权衡，有的时候为了达到一个最好的效果，我们要怎么去考量，哪个是最重要的，哪个是可以花点时间去返工的，我们尽量去做到精益求精。在使用Timeline的同时，我们也加上了一些口型插件之类的辅助工具，我们想把这些工具尽量用尽，然后把它的潜能挖尽。</p><p><br></p><p><b>10. 为什么选择Unity引擎去创作这款游戏呢？后续还有哪些Unity的作品呢？</b></p><p>如前面所提到，我们一直重视的是引擎在手机平台有限机能上的<b>高效性能表现</b>，<b>资源优化的便利程度</b>。能保障游戏高质量的画面在手机上跑得平稳流畅，才是一个商业产品的核心。立项之初我们评估下来Unity是这方面最佳的选择，事实上也是现在绝大多数3D手游的选择。Unity的创作空间很大，可以轻松入门制作各种独立的小游戏，也可以有足够技术发挥空间创作大型游戏。另外，在平台移植的兼容性上，也十分成熟，所以我们在近期移植安卓版的时候也并不需要花费很大的精力。</p><p><img src="https://pic1.zhimg.com/v2-31bc52a9c6e11f2195e20aa5bcdf375b_720w.jpg?rss" data-caption="" data-size="normal" data-rawwidth="1920" data-rawheight="1440" data-watermark="original" data-original-src="v2-31bc52a9c6e11f2195e20aa5bcdf375b" data-watermark-src="v2-467d838b5966d0552414336945a026f7" data-private-watermark-src="v2-9cf3a670833085bf38d8ecb76c8285ae" style="max-width: 400px;"></p><p>后续我们会研究<b>Unity新的渲染管线URP、HDRP</b>，争取把下一个产品带上一个新的台阶。<br> </p>
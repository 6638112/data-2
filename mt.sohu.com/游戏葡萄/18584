➜单产品日流水超200万，爆款休闲游戏的打法又变了
http://www.sohu.com/a/432730493_204824	46729
<p>
<table>
<tbody>
<tr>
<td><span><span style="font-size: 16px;">转型之后是加速。</span></span></td>
</tr>
</tbody>
</table></p>
<p><span style="font-size: 16px;">文/依光流</span><span style="font-size: 16px;"></span></p>
<p><span style="font-size: 16px;">今年是休闲/超休闲游戏加速深挖市场的一年。</span></p>
<p><span style="font-size: 16px;">面对机会掌握在少数人手里的现状，这一领域面临着新的命题：如何扩大机会面？腾讯广告游戏优选计划</span><span style="font-size: 16px;">（下称“优选计划”</span><span style="font-size: 16px;">）</span><span style="font-size: 16px;">就是在这个背景下一步步崛起的。</span></p>
<p><span style="font-size: 16px;">今年3月，优选计划发生迭代，拿出了App和小游戏双端发力生态、买量变现一体化的方案。在当时，或许对大多数人而言，这并不代表切实的机会，但大半年后的现在，情况完全不一样了。</span></p>
<p><span style="font-size: 16px;">五一期间，优选计划借《班主任模拟器》首次大规模试水，这款产品在一周的酝酿后进入App Store免费榜Top 3，留下了不错的成绩。有了这次摸底，优选计划明显加快了步伐，在十一期间进行了一次大推，收获了登顶App Store免费榜的新品《网吧模拟器》。</span></p>
<p><img src="http://p8.itc.cn/q_70/images03/20201118/229e9d11f5ff40a0b46a93582ab1385b.jpeg" /></p>
<p style="text-align: center;"><span style="font-size: 16px;">《网吧模拟器》</span></p>
<p><span style="font-size: 16px;">这其中，无论是整体大盘还是单款游戏，优选计划在国庆期间取得的成绩均达到了历史新高。而据游戏葡萄了解，</span><span style="font-size: 16px;">优选计划已经开始筹备下一个大推节点：元旦。届时会有更多的产品和资源倾注到这个体系中。</span></p>
<p><span style="font-size: 16px;">那么，上述产品的成绩会是常态吗？优选计划往前迭代的速度会有多快？背后的机会又可以支撑多少CP和产品？</span></p>
<p><span style="font-size: 16px;"><span style="font-size: 16px;">不止两个爆款</span></span></p>
<p><span style="font-size: 16px;">回顾此前，优选计划在每个重要的节日节点，都会推出至少一个头部大爆款，比如早先的《班主任模拟器》和最近的《网吧模拟器》。从这两款产品身上，可以看到优选计划孵化的产品的上限在被快速抬高。</span></p>
<p><span style="font-size: 16px;">第一是冲榜速度在加快</span><span style="font-size: 16px;">，也就是起量速度变快了。对比两款游戏来看，前者用了7天冲到免费榜Top 3，后者用了3天就冲到了Top 1。</span><span style="font-size: 16px;">第二是单产品的市场规模在快速扩大</span><span style="font-size: 16px;">，从数据上看，《网吧模拟器》仅在广告渠道的单日新增激活用户数峰值，就能达到30万，单日广告变现流水峰值已超过200万。</span></p>            <div class="lookall-box">
<div class="lookall-shadow"></div>
<section class="lookall">
<a href="javascript:;" class="show-all" id="showMore">
<em>展开全文</em>
</a>
</section>
</div>
<div class="hidden-content control-hide">
<p style="text-align: center;"><img src="http://p0.itc.cn/q_70/images03/20201118/d1997310115c49d699e842c09457c27a.png" /></p>
<p><span style="font-size: 16px;">另外，头部产品的表现并不是唯一的看点，腰部产品的整体抬头也很关键，比如小游戏赛道。</span></p>
<p><span style="font-size: 16px;">国庆期间优选计划</span><span style="font-size: 16px;">一共储备了35款小游戏，其中有7款进入了小游戏生态流水Top 20的范围</span><span style="font-size: 16px;">，可以算作是成绩突出的上游产品。另外，有28款进入规模化运作阶段的产品</span><span style="font-size: 16px;">（指已完成选品、调优、测试，并签订合同开始正式运营的游戏）</span><span style="font-size: 16px;">，均在国庆期间实现了超过100%的流水增长。</span></p>
<p><span style="font-size: 16px;">其中代表性产品如《动物餐厅》和《全民养恐龙》，尽管小游戏生态之外的从业者对其认知不强，但它们在生态内已是榜上有名的爆款。近期优选计划孵化的</span><span style="font-size: 16px;">新品《出发 领主大人》，甚至曾登顶小游戏流水榜Top 1。</span></p>
<p><span style="font-size: 16px;">在小游戏赛道，平台联动+广告多渠道推广的支持下，优选系小游戏整体日流水较9月份翻了一倍，达到400万的规模。整体来看，十一大推期间优选计划双端</span><span style="font-size: 16px;">日均买量投入近千万，变现流水环比增幅超200%。</span></p>
<p><span style="font-size: 16px;">大盘增幅比单个爆款/赛道的增幅还高，说明在那些没有公开的产品中，还有多款增长率更高的产品，与头部、上游产品一同做大了基础盘。这印证了腾讯广告当初的设想：借助优选计划的落地，让腾讯系流量运作的能力，能够体系化地辐射到更多的CP，扩大休闲品类的机会。</span></p>
<p><span style="font-size: 16px;">由此来看，在这半年多的时间里，优选计划的增长速度，可能比我们看到的还要快。</span></p>
<p><span style="font-size: 16px;"><span style="font-size: 16px;">不断迭代的方法论</span></span></p>
<p><span style="font-size: 16px;">增速快的背后，是腾讯广告游戏优选计划产品方法论快速迭代的结果。从最开始的入局，到近期的再次验证，优选计划已经沉淀了很多培养爆款的经验。</span></p>
<p><span style="font-size: 16px;">第一个阶段，优选计划主要在验证升级后方法论的可行性。在今年3月份的时候，腾讯广告就提出了从选品、测试到规模化的思路，其中的关键在于，借《班主任模拟器》这个产品，他们</span><span style="font-size: 16px;">尝试了定制买量的全案，把重点放在广告资源整合、确保流量充足、优化变现这三个方面。</span></p>
<p><span style="font-size: 16px;">每个重点背后，针对的都是腾讯广告在当时面临的课题：流量供给的效率、流量变现的效率。换句话说，通过放手操盘这个案例，腾讯广告摸清楚了适合自身的初步方法论，把腾讯系流量池真正地运用了起来。</span></p>
<p><span style="font-size: 16px;">随后，优选计划迭代到第二个阶段，开始深挖此前运作过程中每个环节上的潜力。最直观的是，今年7月，腾讯广告把这些经验总结成一个更体系化、更具体的利润公式：</span></p>
<p style="text-align: center;"><img src="http://p2.itc.cn/q_70/images03/20201118/341058625e2646b2b06b463350da458a.png" /></p>
<p><span style="font-size: 16px;">而不明显的是，</span><span style="font-size: 16px;">腾讯广告作为流量供给方的平台化效果</span><span style="font-size: 16px;">。当时他们针对选品、增长、变现这三个环节，对CP而言是将流程化繁为简、将经验更体系化地沉淀和输出的服务支持，落到实处，就是产品在每个环节上确实的收益。</span></p>
<p><span style="font-size: 16px;">从这个角度来看，《网吧模拟器》是一个非常有代表性的案例。</span></p>
<p><span style="font-size: 16px;"><strong><span style="font-size: 16px;">1、预判式选品</span></strong></span></p>
<p><span style="font-size: 16px;">休闲游戏选品面临的问题是速度和准度，CP能否在足够短的时间内，找到能让大量玩家满意的有趣玩法，并将它实现。常规来说，腾讯广告提供的是流量和对应的用户画像，但在腾讯体系内，他们应有的优势是对玩家更精准的认知，这与流量能力的结合才是重点。</span></p>
<p><span style="font-size: 16px;">据了解，《网吧模拟器》研发团队接触优选计划团队是在今年9月初，鉴于此前的经验和成功案例，双方很快确立了大众喜闻乐见、有共同认知的题材“网吧”，并且选择了市场上越来越兴起的“轻度模拟经营”赛道。</span></p>
<p><span style="font-size: 16px;">接下来，</span><span style="font-size: 16px;">双方仅用了1天的时间，就完成了项目的吸量测试</span><span style="font-size: 16px;">。原因在于，优选团队在选品的过程中，就已针对游戏强需求点、核心目标进行了拆分，并且从游戏设计和玩家体验角度，开始摸索激励视频结合点、预判玩家的流失点，才能在短时间内确定选品的有效性。</span></p>
<p><span style="font-size: 16px;">对于很多休闲游戏CP而言，小游戏的立项就像碰运气，有时候很难判断某个题材、玩法、品相一定能火，一个爆款的诞生，背后可能是多个、甚至十多个项目的失败。而当下休闲游戏讲究一个“快”字，在CP快速立项、反复推翻的过程中，很难有余力去沉淀经验和形成文档，高效地帮助到下一款项目。所以相比之下，优选在选品上的最大价值，其实是通过有效预判，来释放CP的创作压力。</span></p>
<p style="text-align: center;"><img src="http://p3.itc.cn/q_70/images03/20201118/6e171f335a93494d8968805832fccef4.png" /></p>
<p><strong><span style="font-size: 16px;">2、定制化调优</span></strong></p>
<p><span style="font-size: 16px;">随后《网吧模拟器》开始针对吸量测试时确定的目标人群</span><span style="font-size: 16px;">（“核心用户”+“18~35岁泛用户”）</span><span style="font-size: 16px;">，进行ROI测试调优：一方面是关注测试期主要数据，预估大推期间的关键指标，另一方面是拆分细节数据，帮助游戏定位短板，来推动迭代。</span></p>
<p><span style="font-size: 16px;">比如在优化留存的时候，游戏借助工具提供的数据，以及优选自身的经验，</span><span style="font-size: 16px;">形成了详细的埋点和用户留存漏斗，从而让研发能够关注到高流失率的步骤点</span><span style="font-size: 16px;">。在《网吧模拟器》研发团队看来，“优选团队利用成熟的运营与产品经验，对游戏提出了很多建设性的建议和反馈”。基于这些反馈，游戏安卓用户新增次留从40%，逐步提升到了50%~55%的水平。</span></p>
<p><span style="font-size: 16px;">在经验预判和体系化运作的结合推动下，这一项目的制作、优化过程也被大幅度压缩，从初版迭代到最终上线版本仅用了10天。</span></p>
<p><strong><span style="font-size: 16px;">3、更针对的爆量</span></strong></p>
<p><span style="font-size: 16px;">产品本身的优化完成后，双方要面对的就是国庆节大推的具体实操。首先是基础的准备，一方面是根据玩家喜好，在游戏中筹备足够消耗的节日定制内容；另一方面是根据流量走向制定起量策略打通投放路径。</span></p>
<p><span style="font-size: 16px;">其次，</span><span style="font-size: 16px;">由于早期吸量测试确定了用户画像，ROI优化测试摸清了数据模型，准备期确定了投放策略和路径，所以国庆大推期间，《网吧模拟器》的目标非常明确</span><span style="font-size: 16px;">，在微信朋友圈与优量汇激励视频等重点流量位，结合QQ系与腾讯新闻视频等信息流流量，通过全面曝光，实现了日新增30万的峰值数据。</span></p>
<p><span style="font-size: 16px;">比如通过原生页内嵌Web Store的广告模式，《网吧模拟器》的曝光转化率提升了15~30%。</span></p>
<p><img src="http://p9.itc.cn/q_70/images03/20201118/9cb7837bbc7347f7b1706e0b057e2d08.png" /></p>
<p><span style="font-size: 16px;">最后，结合IAA游戏的特点，优选团队在大推期间也定制了低价起量的策略，在冷启动期快速起量、爬坡期急速扩量等环节，复用了腾讯广告新游起量的经验，最终达成3天时间冲至App Store免费榜榜首的效果。</span></p>
<p><span style="font-size: 16px;">“优选团队始终保持投放数据透明，并指导我们同步根据数据优化版本，且在既定时间内完成了冲榜目标，他们也及时跟进用户的体验反馈，协助我们解决了广告相关的问题。”在研发团队看来，游戏的成绩离不开优选团队从技术到运营各方面的支持。</span></p>
<p><strong><span style="font-size: 16px;">4、水到渠成的变现</span></strong></p>
<p><span style="font-size: 16px;">由于《网吧模拟器》的前期调优贯穿了整个产品从选品、研发、测试的各个环节，这些准备其实都是在提高最终的商业化效果，而这些准备越细致，在变现上消耗的试错成本也就越低了，使得最终的变现优化显得更加水到渠成。</span></p>
<p><span style="font-size: 16px;">比如双方通过合理的数值设计，保证第一个激励视频广告出现在用户刚需的节点上，通过让用户尽快破冰、适应体验激励视频带来的快速推进感，从而提升激励视频的渗透率。最终，《网吧模拟器》iOS版本的每日人均激励视频观看数可达20次左右。</span></p>
<p><span style="font-size: 16px;">总体来看，今年以来腾讯广告在优选计划上的方法论已经变得越来越细，现在已经很难片面地断言，其中某款产品的成功来自某一个关键要素抓到的机遇。</span></p>
<p><span style="font-size: 16px;">不论是游戏的创意设计、变现效率，还是广告效果，它们更趋近于一个整体配合的最终结果</span><span style="font-size: 16px;">。其中最关键的是，优选团队在面对游戏用户的经验判断，已经融入到了几乎每个环节。</span></p>
<p><span style="font-size: 16px;">而必须提及的是，10月刚过，他们的这套方法论还在继续迭代。</span></p>
<p><span style="font-size: 16px;"><span style="font-size: 16px;">爆款休闲游戏的打法又变了</span></span></p>
<p><span style="font-size: 16px;">按照正常的逻辑其实很容易理解，经历了方法论验证阶段、深挖阶段的优选计划，下一个目标自然就是扩张。11月以来，腾讯广告针对优选计划的休闲游戏，已经在尝试一些新的增量空间和商业化打法。</span></p>
<p><span style="font-size: 16px;">首先，是开放朋友圈商业化场景。国庆期间，优选计划基于“朋友圈常规单图直跳小程序”的能力带来量和质的双向提升，都是增量的来源。</span></p>
<p><span style="font-size: 16px;">其次，是精细化oCPM出价方式提高ROI。由于小游戏生态从广告曝光、注册到变现等数据的打通，优选计划已经支持按广告变现用户为优化目标的新出价方式，即oCPM智能出价。</span><span style="font-size: 16px;">国庆期间，使用oCPM投放的广告消耗占比超90%，帮助ROI提升81%，消耗量级提升37%。</span></p>
<p><span style="font-size: 16px;">再次，是扩充玩法品类与变现模式。在优选计划看来，中度休闲游戏已经验证成功，中重度可能是下一个机会点，所以他们已经开始战略布局如SLG等品类，扩张赛道宽度。</span></p>
<p><span style="font-size: 16px;">最后，是探索联合孵化模式。即通过腾讯联动多方，继续降低研发门槛、控制风险，实现一站式的服务和提供研发方向、价值判断等支持。</span></p>
<p><span style="font-size: 16px;">除了策略上的变化，实际上也有产品打出了不错的效果。比如《出发 领主大人》这款SLG产品，</span><span style="font-size: 16px;">在朋友圈能够以低于常规出价近9倍的成本稳定获量</span><span style="font-size: 16px;">。此外，它在保留SLG社交对战玩法内核，以及10%内购空间的同时，通过强化模拟经营部分来尝试广告变现，最终获得了90%的广告变现增益。</span></p>
<p style="text-align: center;"><img src="http://p1.itc.cn/q_70/images03/20201118/a972322ae7484b3e9c684ea601dd83c3.jpeg" /></p>
<p style="text-align: center;"><span style="font-size: 16px;">《出发 领主大人》朋友圈广告</span></p>
<p><span style="font-size: 16px;">与此同时，</span><span style="font-size: 16px;">越来越多的厂商开始与优选计划牵手。</span></p>
<p><span style="font-size: 16px;">“要做出一款精品，需要经过很多次的测试和不断的调优打磨，优选能触达更精准的目标用户，提供大量针对性的优化建议，可以帮助我们更便捷地优化产品。”在中手游网络科技相关项目负责人看来，做精品的大方向一致，是他们选择优选的关键原因。</span></p>
<p><span style="font-size: 16px;">这次合作给他们带来了很多数据层面的提升，比如“留存数据提升了5个百分点以上，时长提升超过5分钟，变现效率提升了50%”等等，但更重要的是解决了他们的后顾之忧：“加入计划之后，不需要担忧如何获量，所以我们可以更专注于游戏的打磨，加速规模化。”</span></p>
<p><span style="font-size: 16px;">目前，优选计划的阵营已经逐渐扩大。据官方透露，</span><span style="font-size: 16px;">截至今年11月，规模化小游戏数同比增长5.3倍</span><span style="font-size: 16px;">。换句话说，腾讯广告现在已经储备了大批量达到直接上线标准的新品，就等下一个关键的推广节点了。</span></p>
<p><span style="font-size: 16px;">由此不难推断，接下来的元旦会是休闲游戏爆发的一个大节点。而此时的优选计划，带来的将是更定制化的新游戏、更成熟的体系化打法，以及更多的新增流量。相信在更多CP吃到蛋糕的时候，休闲游戏市场会变得更加热闹。</span></p>
➜拿千万资金做孵化，这家广州游戏公司向CP表了态
http://www.sohu.com/a/432738681_204824	46729
<p>
<table>
<tbody>
<tr>
<td><span style="font-size: 16px;">这或将是一场研发不容错过的沙龙。</span></td>
</tr>
</tbody>
</table></p>
<p><span style="font-size: 16px;">游戏市场的2020，创新仍是一大热词。</span></p>
<p><span style="font-size: 16px;">从玩法创新、题材创新、品类创新，到越来越多基于文化的内容创新，游戏市场正思考出创新的不同可能，今年口碑销量双丰收的创新作品不减反增。</span></p>
<p><span style="font-size: 16px;">同时随着玩家鉴别精品游戏意识提升，套路化的产品不再讨喜，不创新将更加被动。葡萄君今年接触到的厂商中，部分团队为了鼓励创新，定期带领团队开会尝试预研，也有部分团队从单一维度创新的舒适区走出来，涉足新的创新思路。</span></p>
<p><span style="font-size: 16px;">益世界创始人&amp;董事长潘晓旭也提出了类似的观点——创意是一切的源头，只有内容才能赋予流量价值和意义。不久前，“益玩”正式更名为“益世界”，潘晓旭在品牌升级时写给全体员工的内部信中写道，“1.0时代以流量为主导，彼时的益玩创造了流量聚合模式，服务游戏实现商业化运营；但2.0时代强调内容为王，益世界也一直在搭建孵化体系，服务内容生长，帮助好产品创造价值。”</span></p>
<p><span style="font-size: 16px;">对于后者，益世界推出了一项CP聚合计划，单项目孵化资金最高达1000万元，从立项、测试、投放等维度提供服务。在创新这条路上， <span style="font-size: 16px;">益世界想跟CP走得更远</span>。 </span></p>
<p><span style="font-size: 16px;">立项、测试、投放，多角度支持CP</span></p>
<p><span style="font-size: 16px;">概括来说，益世界CP聚合计划为每个潜力游戏项目提供200万-1000万孵化资金，同时整合内部资源，帮助想做创新产品的优质CP解决研发过程中不限于立项分析、资金支持、市场营销、中台技术、政策资讯的关键问题。</span></p>
<p><span style="font-size: 16px;">比如在</span><span style="font-size: 16px;">立项分析阶段</span><span style="font-size: 16px;">，益世界将</span><span style="font-size: 16px;">整合过去8年联运+发行市场实战经验并加以分析，通过数据测试及专业经验预判行业热点和市场新机会。</span><span style="font-size: 16px;">游戏行业一直有“立项定生死”的说法，这么做的目的也是尽可能帮助开发者不去犯方向上的错误。</span></p>
<p><span style="font-size: 16px;">成功立项的产品将很快步入</span><span style="font-size: 16px;">导量测试阶段</span><span style="font-size: 16px;">，对于有想法的CP团队，益世界会为其</span><span style="font-size: 16px;">承担测试成本，把控调优方向</span><span style="font-size: 16px;">，持续到长线发展中。</span></p>
<p><span style="font-size: 16px;">这些工作的基础都建立在益世界的中台体系上。不仅仅是立项和测试，中台体系还能覆盖到其它研发场景，提供多项技术支撑，缩短研发时间，尽快投入市场观察反馈。</span></p>
<p><span style="font-size: 16px;">从发行角度，益世界为单款游戏组建专项游戏运营团队</span><span style="font-size: 16px;">，跟进用户反馈和市场热点，及时响应并同步给研发，让研发专注于打磨版本。</span></p>
<p><span style="font-size: 16px;">而</span><span style="font-size: 16px;">在营销层面</span><span style="font-size: 16px;">，益世界的做法是“跟热点不如造热点”，</span><span style="font-size: 16px;">为每款游戏定制营销策略</span><span style="font-size: 16px;">，从预热到爆发到持续经营匹配不同玩法的营销创意。</span></p>
<p><span style="font-size: 16px;">另外对于有出海打算的产品，益世界主要</span><span style="font-size: 16px;">瞄准出海本地化工作</span><span style="font-size: 16px;">，针对不同市场探索不同出海打法，未来的全球化布局将从东南亚、中东、欧美市场开启。而至于具体的合作细节，都将在下面这场沙龙中对外分享。</span></p>
<p><span style="font-size: 16px;">这或将是一场研发不容错过的沙龙</span></p>
<p><span style="font-size: 16px;">12月1日，“益世界CP聚合计划-游戏开发者沙龙广东站”开启，主题为“创变·破局”，这也是益世界品牌升级后举办的第一场线下沙龙。活动当天，益世界将与游戏行业资深专家一起，与研发从业者展开交流。</span></p>            <div class="lookall-box">
<div class="lookall-shadow"></div>
<section class="lookall">
<a href="javascript:;" class="show-all" id="showMore">
<em>展开全文</em>
</a>
</section>
</div>
<div class="hidden-content control-hide">
<p><span style="font-size: 16px;">围绕出海，谷歌大中华区新战略伙伴关系负责人陶椰将讨论出海赛道现存的机会。</span></p>
<p style="text-align: center;"><img src="http://p9.itc.cn/q_70/images03/20201118/e2e781ea9e304748a675928c5740bb5e.jpeg" /></p>
<p><span style="font-size: 16px;">围绕营销，热云数据CEO白冬立将带来游戏买量数据和营销经验分享。</span></p>
<p style="text-align: center;"><img src="http://p5.itc.cn/q_70/images03/20201118/9cd90374baba4d6fae513d88357b3c52.jpeg" /></p>
<p><span style="font-size: 16px;">围绕研发，先后主导研发《商道高手》《神都探奇》的益心游戏总经理龙宇将分享背后团队的研发历程。</span></p>
<p style="text-align: center;"><img src="http://p6.itc.cn/q_70/images03/20201118/81e2a8c05cca428db7f139035725db8a.jpeg" /></p>
<p><span style="font-size: 16px;">此外，中国社科院大学互联网法治研究中心特约研究员孙磊，将讲述海外游戏内容监管知识。</span></p>
<p style="text-align: center;"><img src="http://p7.itc.cn/q_70/images03/20201118/e6186d354e9d4f53abee686b74bd1964.jpeg" /></p>
<p style="text-align: left;"><span style="font-size: 16px;">陀</span><span style="font-size: 16px;">螺科技首席运营官任培文将作为圆桌嘉宾主持人，与各位嘉宾寻找行业“破局”之路。</span></p>
<p style="text-align: center;"><img src="http://p6.itc.cn/q_70/images03/20201118/71c6deeb99684034872d7acc4ddd3e2d.jpeg" /></p>
<p><span style="font-size: 16px;">益世界创始人&amp;董事长潘晓旭将分享极致商业化下的游戏创新之路。</span></p>
<p style="text-align: center;"><img src="http://p4.itc.cn/q_70/images03/20201118/e8609914e0a946c48845ddfdd217b670.png" /></p>
<p><span style="font-size: 16px;">成立8年，益世界的新思考</span></p>
<p><span style="font-size: 16px;">成立于2012年的益世界最早以联运起家，旗下手游平台1号玩家上的用户量高达千万级。正值游戏市场流量红利期，益世界成功积攒了市场营销和产品运营经验。</span></p>
<p><span style="font-size: 16px;">深谙流量打法的益世界，也在随市场变化丰富自身的角色。2016年起，益世界开始扮演独代发行角色，发行了MMO、SLG、卡牌、回合等多个品类的产品。近两年，益世界推出《商道高手》《神都探奇》，先后探索商战模拟经营、国风探案这两个很少有团队入局的品类。</span></p>
<p style="text-align: center;"><img src="http://p8.itc.cn/q_70/images03/20201118/30b6f08a859c42b5843a1c3f120a8342.jpeg" /></p>
<p style="text-align: center;"><span style="font-size: 16px;">从上到下分别为《金币大富翁》《商道高手》《神都探奇》</span></p>
<p><span style="font-size: 16px;">益世界做发行不同之处体现在，</span><span style="font-size: 16px;">流量不只是变现的对象，它也是一种可以扶持和孵化CP的资源。</span><span style="font-size: 16px;">如果能将流量附加到产品侧，或许能降低试错成本，提升成功率。</span></p>
<p><span style="font-size: 16px;">在制作成本骤增、版号难求的压力下，CP收缩规模谨慎开发，今年游戏市场产品荒似乎有加重的趋势，发行和CP相互协作共同打造精品将是一条性价比更高的道路。我们也看到越来越多的发行商，通过资金孵化等扶持政策，尽可能吸引有想法的CP团队加入。</span></p>
<p><span style="font-size: 16px;">这其中，单项目拿1000万做扶持的益世界，一定程度上让CP感受到了这家公司态度。接下来的关键，就聚焦在创新产品的转化率上面了。</span></p>
➜Q3日本手游市场：中国手游27款进入畅销Top100 ，总吸金9.6亿美元
http://www.sohu.com/a/432738690_204824	46729
<p><span style="font-size: 16px;">今日，Sensor Tower发布了2020年Q3日本手游市场收入的数据。 </span></p>
<p><span style="font-size: 16px;">数据显示，Q3日本手游市场收入增至50.1亿美元，再次刷新历史记录。同时，入围畅销榜Top100的中国手游产品数量增加至27款，总收入达到9.6亿美元，占Top100手游总收入的25.6%。</span></p>
<p><span style="font-size: 16px;">本期下载总量仅有1.8亿次，环比下滑21.9%，同比下滑14.3%，Q3是疫情爆发以来下载量最低的季度。</span></p>
<p><span style="font-size: 16px;"><span style="font-size: 16px;">日本市场热门手游</span></span></p>
<p><span style="font-size: 16px;">由Sensor Tower数据报告得知，mixi《怪物弹珠》以2.7亿美元蝉联日本手游收入榜首。另外，Sony《Fate/Grand Order》稳居榜单第2名。</span></p>
<p><span style="font-size: 16px;">即将迎来上市3周年的《荒野行动》，本季度预估收入近1.8亿美元，同比增长52%，环比增长13.8%，位列收入榜第3名。截至Q3，《荒野行动 》在当地的预估总收入已经突破12.7亿美元。</span></p>
<p><span style="font-size: 16px;">本期榜单上的新品还有Square Enix旗下的IP衍生战术RPG手游《勇者斗恶龙Tact》，以及莉莉丝旗下的放置手游《剑与远征》。</span></p>
<p><span style="font-size: 16px;">在下载榜中，有5款新产品进入榜单，其中《勇者斗恶龙Tact》和《Re:从零开始的异世界生活》均来自日本厂商</span><span style="font-size: 16px;">（Square Enix和SEGA）</span><span style="font-size: 16px;">；中国厂商的新品达到3款，分别为莉莉丝的《剑与远征》，游族的冒险剧情RPG养成手游《红: 伊甸园的骄傲》以及武汉微派的益智休闲手游《贪吃蛇进化论》。</span></p>
<p><span style="font-size: 16px;"><span style="font-size: 16px;">中国手游在日本</span></span></p>
<p><span style="font-size: 16px;">本期共有27款中国手游入围日本手游畅销榜Top100，总收入达到9.6亿美元，占Top100总收入的25.6%。在2018年Q3，仅有18款中国手游入围Top100，收入合计3亿美元，占比仅11.8%。与18年同期相比，中国厂商在日本市场的收入成功翻了三倍。</span></p>
<p><span style="font-size: 16px;">在本季度中，《荒野行动》，《放置少女》，《黑道风云》和《偶像梦幻祭!!Music》等手游在日本市场的收入均创历史新高；得益于新上市的《剑与远征》，莉莉丝的收入环比增长208%。此外，游族也凭借新游《红：伊甸园的骄傲》，收入环比增长112%。</span></p>
<p><span style="font-size: 16px;">下载榜方面，本期首次上榜的新品Higgs Studio的益智消除手游《Tile Master》以超过160万次的下载位居榜首。除了上文提到过的游戏以外，还有另外5款新品进入榜单，它们分别是，腾讯《圣斗士星矢》，4399的MMORPG手游《剑魂》，Joypac的休闲射击手游《Pocket Sniper!》，米哈游《原神》和易幻的JRPG手游《造物法则2》 。</span></p>
➜米哈游技术总监分享：《原神》主机版渲染技术要点和解决方案
http://www.sohu.com/a/432738880_204824	46729
<p><span style="font-size: 16px;">分享/弋振中 整理/依光流</span></p>
<p><span style="font-size: 16px;"></span><span style="font-size: 16px;">在17日晚的Unity线上技术大会中，米哈游技术总监弋振中以“从手机迈向主机”为题，分享了他们的最新作《原神》针对主机平台的渲染技术要点，以及解决思路、方案。</span></p>
<p><span style="font-size: 16px;">需注意的是，《原神》在不同平台面临的具体技术难点或有不同，但透过面向主机平台开发时的技术要点，也能窥见米哈游在这款游戏上深挖的技术方向。话不多说，以下为弋振中的演讲内容。</span></p>
<p style="text-align: center;"><img src="http://p4.itc.cn/q_70/images03/20201118/dee0872a99124d24a8c84de64c78bd39.png" /></p>
<p><span style="font-size: 16px;">大家好！今天我演讲的主题是从手机走向主机，《原神》主机版渲染技术分享。简单介绍一下《原神》，它是一款开放世界RPG游戏，有独特的二次元画风，具备跨平台、长期运营，长期更新等特质。</span></p>
<p><span style="font-size: 16px;">稍微介绍一下自己，我叫弋振中，有十多年的主机游戏开发经验，毕业之后加入了Ubisoft Shanghai，2012年去了加州的Zindagi Games，为当时还没有上市的PS4做一款独占的游戏。然后去了纽约的Avalanche Studios，参与制作了《正当防卫》的3代和4代。回国之前的最后一站是在西雅图的微软Xbox。2019年初我回到上海，加入了米哈游，组建了研发团队，目前负责《原神》的主机平台开发。这是我参与制作过的一些项目。</span></p>
<p style="text-align: center;"><img src="http://p9.itc.cn/q_70/images03/20201118/b9fd8b40d1ab4ffa9d1b694b21c616c2.png" /></p>            <div class="lookall-box">
<div class="lookall-shadow"></div>
<section class="lookall">
<a href="javascript:;" class="show-all" id="showMore">
<em>展开全文</em>
</a>
</section>
</div>
<div class="hidden-content control-hide">
<p><span style="font-size: 16px;">今天，我首先会介绍一下《原神》主机平台的基本情况，然后按照我们开发的时候改造渲染管线的思路，选择部分的技术点进行更深入的分享。希望从渲染的角度，让大家对于我们如何将《原神》带到主机平台有大致的了解。最后是分享一点我个人的开发体会。</span></p>
<p style="text-align: center;"><img src="http://p4.itc.cn/q_70/images03/20201118/3da45c43d430402fa71ebe110b67d8a5.png" /></p>
<p><span style="font-size: 16px;">Unity是我们的游戏使用的引擎。这是一个灵活度很高的引擎，代码风格很简洁，所以我们能够更方便地定制化开发《原神》的渲染管线。Unity中国的技术支持团队很配合我们，在此对他们表示感谢！</span></p>
<p><span style="font-size: 16px;">PS4作为游戏的主机，硬件架构可以说是为游戏开发量身打造的，主机开发过程当中大量的精力是花费在如何更好地利用硬件特性上，也积累了不少我们认为还可以的技术实现。不过因为索尼NDA的原因，今天的分享就不涉及相关的内容，也不涉及底层的优化。前面也提到今天的分享，主要是针对渲染管线的，所以也不涉及CPU和其他的模板。</span></p>
<p style="text-align: center;"><img src="http://p2.itc.cn/q_70/images03/20201118/70c4a2eb8c904bcead005ec859a2a3b2.png" /></p>
<p><span style="font-size: 16px;">下面是主机渲染管线的简介，首先我们有非常强大的引擎团队，在Unity上面为《原神》进行了深度的开发。主机平台和手机平台采用了不同的渲染管线，但是游戏的基调是一致的，都是基于PBR的风格化渲染。《原神》的主机平台开发起步时间稍晚于手机平台，在平台管线搭建好以后就进入了同步开发的节奏。资源的制作、功能的开发等多个方面都需要兼顾到多个平台的情况。</span></p>
<p><span style="font-size: 16px;">基于PBR，是为了让整个大世界的光影效果保持统一，因为我们的光影都是实时计算的，有24小时的循环，有动态的天气系统。PBR能够确保不会在不同的光照条件下出现脱离预期的渲染效果，作为风格化的游戏，也需要根据美术的需求修改不同的材质。</span></p>
<p style="text-align: center;"><img src="http://p3.itc.cn/q_70/images03/20201118/ffb64db82e2a4ee199209833fad53fe1.png" /></p>
<p><span style="font-size: 16px;">《原神》在PS4上的分辨率是这样设置的，PS4 pro上面是原生的4K分辨率，在PS4的base，我们把1440P作为渲染分辨率，最后输出到1080P，这样我们得到的最终画面会更加清晰。作为《原神》为主机开发的功能，我们大量使用了compute shader，compute shader有很多很好的特性，而且在支持Async compute管线的平台上，我们还能够进一步隐藏开销。</span></p>
<p style="text-align: center;"><img src="http://p6.itc.cn/q_70/images03/20201118/162a84fd967644669fb1974b8b6ccc16.png" /></p>
<p><span style="font-size: 16px;">《原神》的风格化渲染是非常独特的，因此美术对于图形功能的要求也和写实类游戏不一样，尤其是光影效果，大家可以看到脏、黑、死、焦、噪这些词都频繁地出现在美术和程序的沟通当中。</span></p>
<p style="text-align: center;"><img src="http://p5.itc.cn/q_70/images03/20201118/2faebb40025a462390aa2702a887d7ca.png" /></p>
<p><span style="font-size: 16px;">下面我们要提到的所有的技术，都经历了很长的磨合期，有一些甚至还在磨合当中。在经历了反复的打磨和修改，直到美术对最终效果满意，程序对最终实现方案的性能也满意的情况下，我们才会大规模铺开制作。</span></p>
<p><span style="font-size: 16px;">在介绍具体的功能之前，先跟大家讲一下在PS4平台刚开始开发的时候，我们面临的一个状况。首先是我们有一个已经针对手机做了大量开发的Unity引擎，这就意味着「简单的切换平台就想让游戏能够在PS4上跑起来」，是不可能的了。</span></p>
<p><span style="font-size: 16px;">很多项目之前做的改动，在实现的时候也没有考虑到主机平台的特性。再加上各种计划为PS4开发的图形和游戏的功能，这都意味着大量的工作量。另外还有TRC、索尼账号等等一系列PS4独有的问题需要解决，工作量和工作难度都非常大，然而我们能够给主机开发的资源又很有限。</span></p>
<p><span style="font-size: 16px;">一开始的主机团队就我一个人，光杆司令，团队搭建需要一个过程。为了全球同步上市，留给我们的开发时间大概只有一年半，一年半的时间要让一个平台从无到有，还要达到一定的品质，这期间还要准备ChinaJoy、TGS等展会，能够顺利地完成这一切，真的是非常感谢《原神》的整个开发团队的努力，非常的不容易。</span></p>
<p style="text-align: center;"><img src="http://p0.itc.cn/q_70/images03/20201118/029ba42bfd1f44e398e1eb75e3ad5334.png" /></p>
<p><span style="font-size: 16px;">接下来讲一下我们在渲染管线做改动的时候一些思路，因为开发的时间很紧，所以在选择技术改造点的时候，遵循下面几个原则。</span></p>
<p><span style="font-size: 16px;">第一个是关于功能的选择，我们首先排除掉开发周期长的，需要过多前期研究工作的功能，因为我们没有时间。</span></p>
<p><span style="font-size: 16px;">然后根据游戏的美术风格，我们选择一些对于画质的帮助更大的地方去做提升。另外因为时间不多，所以我们希望新加的功能能够更多地发挥作用，所以最好是能够在相互之间产生互动，这样会显得画面更加系统化，得到的画质提升也会有1+1&gt;2的效果。</span></p>
<p style="text-align: center;"><img src="http://p6.itc.cn/q_70/images03/20201118/d5352bc740df4815a4270d39389c480d.png" /></p>
<p><span style="font-size: 16px;">具体来看一些技术点。首先我们从场景的光影方面选择了几个技术点，主要是侧重一些方法，会稍微涉及到一点点的优化思路。</span></p>
<p><span style="font-size: 16px;">第一个是关于方向光的阴影，《原神》的大量游戏时间是在室外，室外方向光的阴影质量非常重要。一方面近处的阴影细节需要更加细腻，才显得画面更干净。另外一方面是阴影覆盖范围需要足够大，因为游戏的可视距离非常远。</span></p>
<p><span style="font-size: 16px;">《原神》的阴影范围是800米。大家可以看一下这张贴图，即使在远处墙壁上一小片的绿植产生的阴影，在放大之后都能够看到树叶的轮廓。这个地方放大之后，能够看到树叶轮廓，而且非常稳定。整体上来说，我们对于《原神》的方向光阴影的质量是比较满意的。</span></p>
<p style="text-align: center;"><img src="http://p9.itc.cn/q_70/images03/20201118/430ae11ffa7d42589e5a020073838671.png" /></p>
<p><span style="font-size: 16px;">我们阴影的技术还算是比较常规，使用了Cascaded shadow map 加上基于Poisson disc的soft shadow，我们游戏没有使用通常的4级Cascades，而是用了8级，这属于大力出奇迹的方式。大力出奇迹带来了更好的阴影效果，当然也带来了更多的性能开销。更多的drawcall会带来CPU开销，更多的Cascades也会带来GPU的开销。</span></p>
<p style="text-align: center;"><img src="http://p2.itc.cn/q_70/images03/20201118/3aa897e5088a447a8f8c88d5287f505f.png" /></p>
<p><span style="font-size: 16px;">当我们把质量提升上去之后，会想办法来解决性能问题，那我们怎么去做的呢？</span></p>
<p><span style="font-size: 16px;">首先在CPU端，我们做了一个shadow cache，8级cascades的前4级我们每帧都更新，后面4级是采用轮流更新的方式，确保每8帧所有的cascades都能至少更新一次。每一帧的话，我们只更新5级cascades。</span></p>
<p style="text-align: center;"><img src="http://p6.itc.cn/q_70/images03/20201118/38a85b4560f84826a7372db21cdbb2b1.png" /></p>
<p><span style="font-size: 16px;">其次，主要的工作量其实在GPU端，用了8级cascades以后，我们的screen space shadow map的开销长期是大于2毫秒的，在某些情况之下能够超过2.5毫秒。GPU比4级cascades的情况下，爆涨了0.5到0.8毫秒。</span></p>
<p><span style="font-size: 16px;">我们的软阴影采用的是泊松分布的采样，而且每个像素会去做一个旋转，来消除重复的pattern，这一整套的操作都是很重量级的。但是我们仔细想一想，真的需要对每个像素都要做这么多操作吗？</span></p>
<p style="text-align: center;"><img src="http://p2.itc.cn/q_70/images03/20201118/ce37113f70f240dd80e7b52db291021e.png" /></p>
<p><span style="font-size: 16px;">所以我们的优化思路，是尽量只在必要的地方做软阴影计算，我们会生成一张Mask贴图，在贴图里面标出阴影、半影和非影片区。阴影区和非阴影区只需要直接返回0和1就好了，只有在半影区才会去计算软阴影，通过这种方式，我们的GPU开销大致减少了30%左右。甚至比采用4级cascades还要再快一些。</span></p>
<p style="text-align: center;"><img src="http://p3.itc.cn/q_70/images03/20201118/789d8236175d47f2b9ea7752b7df5cb6.png" /></p>
<p><span style="font-size: 16px;">大家可以看一下这张图，图里面被红色标注的区域，就是我们的半影区，这个是需要我们去做软阴影处理的区域。其他的区域，就是在阴影区域或者是非阴影区域，我们直接返回0和1就好了。大家可以看出来，绝大部分的像素都可以去掉软阴影计算这个繁琐的步骤。</span></p>
<p style="text-align: center;"><img src="http://p4.itc.cn/q_70/images03/20201118/2e07ac6d67d44ed881795aeafde26fc8.png" /></p>
<p><span style="font-size: 16px;">那么这张神奇的Mask贴图是怎么生成的呢？这张Mask贴图的分辨率是屏幕分辨率的1/4×1/4，也就是说一个Mask值对应的是一个4×4的block。然后我们对4×4的block里面的每一个像素，来判断它是不是在阴影中，最后汇总成一个阴影、半影和非阴影的三个状态，保存到Mask贴图里。这样我们能够得到一个准确的半影信息，但是它不够快，所以我们做了进一步的优化，只选择4×4这个block里面很少的几个像素，来判断是不是在阴影当中。</span></p>
<p><span style="font-size: 16px;">这几个像素的判断结果，就代表了整个block的信息，显然这样会出现一些误差，因为我们是拿几个少数几个像素的结果来代表整个block，所以我们把这样计算得到的Mask贴图做了模煳处理，让半影的区域稍微扩散出去。整个Mask贴图的生成，包括模煳处理大概的开销是在0.3毫秒左右。</span></p>
<p style="text-align: center;"><img src="http://p9.itc.cn/q_70/images03/20201118/777e529a9d264f58a9d4f19e89406bb6.png" /></p>
<p><span style="font-size: 16px;">大家可以看一下对比图。优化出来的效果非常好，肉眼可以说是看不出任何的区别。这样优化完之后，我们的GPU开销时间大概稳定在1.3到1.7毫秒。</span></p>
<p style="text-align: center;"><img src="http://p4.itc.cn/q_70/images03/20201118/98b8018a57cb44548a4113cab313d7db.png" /></p>
<p style="text-align: center;"><img src="http://p1.itc.cn/q_70/images03/20201118/06f9c43932ec48edac17318909dd0e77.png" /></p>
<p><span style="font-size: 16px;">把阴影搞好以后，下面我们来看看AO</span><span style="font-size: 16px;">（Ambient Occlusion环境光遮蔽）</span><span style="font-size: 16px;">。大家可以考虑一种情况，就是人物和场景的物体都已经处在山或建筑物的阴影当中，这个时候人物和物体的投影跟山和建筑的投影是融为一体的。这种情况之下，画面缺乏对比，人和物体就会显得浮空。</span></p>
<p><span style="font-size: 16px;">为了解决这个问题，我们在游戏里面采用了多种的AO技术，针对不同的情景生成不同的AO。首先我们使用了HBAO，这是一个比较常规的实现，能够提供一些比较细节的AO效果。其次我们对静态物体和动态物体分别采用了AO Volume和Capsule AO这两种技术。</span></p>
<p style="text-align: center;"><img src="http://p4.itc.cn/q_70/images03/20201118/278d8442aa4f4e12a41c013d117f51ed.png" /></p>
<p><span style="font-size: 16px;">大家可以看一下这是HBAO开关的对比图，效果还是很明显的。</span></p>
<p style="text-align: center;"><img src="http://p0.itc.cn/q_70/images03/20201118/ce431b9121964ba78cae7c1b991edc7a.png" /></p>
<p style="text-align: center;"><img src="http://p7.itc.cn/q_70/images03/20201118/cbb4c9a1999b4d6f97b48220006e9e48.png" /></p>
<p><span style="font-size: 16px;">下面这个是AO Volume的开关情况，大家可以重点看一下我们在红圈里面的区域，椅子对地面产生了柔和的投影。</span></p>
<p style="text-align: center;"><img src="http://p8.itc.cn/q_70/images03/20201118/3e98c814413a4d8f86746f5debf5a5b2.png" /></p>
<p style="text-align: center;"><img src="http://p4.itc.cn/q_70/images03/20201118/e8da951b95ca4e88b4ba84832e2e243b.png" /></p>
<p><span style="font-size: 16px;">和HBAO相比，AO Volume能够产生更大范围的AO。它可以针对类似桌子或者椅子产生大面积AO。因为技术原理和性能的限制，HBAO是没办法产生这种效果的，AO Volume这个时候就体现很好的补充。</span></p>
<p><span style="font-size: 16px;">要实现AO volume，首先我们是在离线的时候对需要产生AO volume的物体做一个遮挡信息的计算。这个计算是在物体的本地空间</span><span style="font-size: 16px;">（Local space）</span><span style="font-size: 16px;">去做的，生成的遮挡信息我们保存下来，在运行的时候注入到volume texture中去使用。这个技术在2012年GDC关于《InFamous 2》的讲座上有提到过，大家有兴趣可以去看一下。</span></p>
<p style="text-align: center;"><img src="http://p3.itc.cn/q_70/images03/20201118/e25a590f34914cebb9c24543a2da5891.png" /></p>
<p><span style="font-size: 16px;">下面是关于Capsule AO的对比图，大家可以重点看一下屏风和地面，被我们红色的圈给圈出来的区域。大家可以看到相邻在屏风和地面，能够产生出能够反映体形和人影的投影。而且如果在游戏中大家去观察的话，随之相邻动作的改变，阴影的形状也会随之产生变化。</span></p>
<p style="text-align: center;"><img src="http://p6.itc.cn/q_70/images03/20201118/a9bca850dd064f639e24ec95f1af0825.png" /></p>
<p style="text-align: center;"><img src="http://p6.itc.cn/q_70/images03/20201118/e1813c767d7d401dbf1807e67d5b899a.png" /></p>
<p><span style="font-size: 16px;">我们前面提到AO Volume主要是针对静态物体的，因为遮挡信息是通过离线计算的方式保存下来。像角色这种带骨骼动画的，是不能采用这种方式的，因为形状会不停地发生变化。</span></p>
<p><span style="font-size: 16px;">Capsule AO的做法就是用一些胶囊体包裹住人物的四肢和躯干，这些胶囊体和角色的骨骼动画绑定进行同步更新。然后这些胶囊体会被用来做遮挡计算，计算的时候我们把它分为无方向的环境遮挡计算，以及带方向的遮挡信息计算。带方向的遮挡信息计算采用的方向是主光源方向和法线进行混合之后的得到的虚拟遮挡方向。通过这种方式，角色可以同时在周围的墙和地面等投出多个阴影。</span></p>
<p style="text-align: center;"><img src="http://p6.itc.cn/q_70/images03/20201118/dcce8c3e782749e891123591149406ca.png" /></p>
<p><span style="font-size: 16px;">下面是一个关于AO的优化技巧，《原神》的AO都是在1/2×1/2分辨率的RT</span><span style="font-size: 16px;">（Render Texture）</span><span style="font-size: 16px;">上去做计算。为了保证画面的干净，我们对AO还做了一个模煳处理（blur）。然后再Upsample一个全分辨率的贴图上面去。所有的模煳处理和Upsample pass，我们都用了一个Bilateral filter，确保不会有无效的AO渗透到周围的区域。</span></p>
<p><span style="font-size: 16px;">从前面的描述可以看出来，模煳处理和Upsample加起来一共有三个pass，这就意味着AO需要被读取和写入多次。而且你如果你了解Bilateral Upsample的话，大家可以知道相邻的像素之间有很多的计算其实都是重复的，所以我们采用的优化方式是将所有的计算都放到一个compute pass里面去做。然后通过LDS来保存blur的中间值，通过同时输出四个像素的方式，来重用相邻像素的计算。最终我们还可以通过async compute pipe把性能开销进一步降低。</span></p>
<p style="text-align: center;"><img src="http://p3.itc.cn/q_70/images03/20201118/2d570af3a1324841acb64a4eee87bed6.png" /></p>
<p><span style="font-size: 16px;">关于我们的Local Light，我们在游戏里面采用了Clustered deferred lighting。我们支持是视野内同时出现最多1024盏灯。大概的做法是我们将屏幕分成64×64像素的tile，然后每一个tile在深度的方向上面继续分为16级的clusters。通过这两张图，可以大概看出我们能够支持多少灯。</span></p>
<p style="text-align: center;"><img src="http://p1.itc.cn/q_70/images03/20201118/cdcac2a57307446ab660d5909ce5df52.png" /></p>
<p><span style="font-size: 16px;">这张图是一个游戏里面的截图，是一个典型的通过Local Light的阴影提升画面效果的情况，多个不同的Local Light，它们的照明范围是交错存在的，然后角色也投下多个不同的阴影朝不同的方向，画面就显得细节很丰富。</span></p>
<p style="text-align: center;"><img src="http://p4.itc.cn/q_70/images03/20201118/b2e080ebcc3f4939ad945c24a777025d.png" /></p>
<p><span style="font-size: 16px;">我们怎么做的呢？我们的Local Light 阴影系统支持接近100盏灯的实时阴影，理论上我们可以支持更多的，不过这已经很够用了。阴影的分辨率是根据优先级和距离进行动态调整，最终的阴影是通过烘焙的静态场景阴影和实时生成的动态场景阴影结合得到的。</span></p>
<p><span style="font-size: 16px;">游戏里面有很多的Local Light，如果每一个Local Light都去烘焙它的shadow texture的话，会占用的硬盘空间非常大。而且因为是深度贴图，所以不能够随便使用BCn的压缩，那样瑕疵会非常风险，所以需要一个好的算法来对于烘焙的shadow texture做一个压缩。这个压缩需要在精度损失足够低的同时，还要保持压缩率足够高，同时我们的解压开销要非常小才行。</span></p>
<p style="text-align: center;"><img src="http://p0.itc.cn/q_70/images03/20201118/d437e128da2342b6af530ef2b9ff9599.png" /></p>
<p><span style="font-size: 16px;">我们开发的这个系统是在离线制作的时候，对于shadow texture做一个压缩，尽量地去保持精度，运行的时候解压的速度也非常快，用compute shader去解压的情况，1K×1K的shadow texture，我们解压只需要0.05毫秒，可以说非常非常快。</span></p>
<p style="text-align: center;"><img src="http://p3.itc.cn/q_70/images03/20201118/46cd589d3322401a92cf7ce42d48fb2c.png" /></p>
<p><span style="font-size: 16px;">那压缩率和压缩质量呢？我们先介绍一下压缩的算法思路。首先我们对于shadow texture按照一个2×2的block来进行编码，每4个深度值，我们用32bit来保存。如果想要降低精度损失，可以选择高精度压缩，这种情况之下每个block的大小变成64bit。</span></p>
<p><span style="font-size: 16px;">编码的方式有两种，一种是基于深度平面方程的方式，或者是通过压缩的浮点数方式。编码完成之后，还要进一步通过一个quad tree来合并编码以后的数据，进一步提高压缩率。quad tree是每个tile要保存一个，而每个tile又包含了16×16个block，大家可以看到下面的三个图，从左到右分别是没有压缩的深度贴图，中间是我们的平面方程编码的视图，最右边是我们quad tree 0到4级的深度视图，黑的地方是深度为0的区域。我们参考了Li Bo在2019年Siggraph上面的讲座，大家有兴趣可以去看一下。</span></p>
<p style="text-align: center;"><img src="http://p7.itc.cn/q_70/images03/20201118/99ce44c2c3ce46c6accc4d4ef1605440.png" /></p>
<p><span style="font-size: 16px;">压缩比：在一个典型的室内场景默认精度压缩比是在20%到30%左右。如果开启高精度模式压缩的话，大概默认精度压缩到40%到70%。阴影贴图的压缩是非常必要的，可以帮我们容量下降一个数量级。</span></p>
<p style="text-align: center;"><img src="http://p1.itc.cn/q_70/images03/20201118/82153d30961646768b023ce01855fb88.png" /></p>
<p><span style="font-size: 16px;">大家可以看一个对比，这是默认精度压缩，能够看到红圈里面有一些瑕疵。这实际上是我们找到的可以说是最差的一个情况。</span></p>
<p style="text-align: center;"><img src="http://p5.itc.cn/q_70/images03/20201118/97c384759bc14776949f3666bb1b2ca6.png" /></p>
<p><span style="font-size: 16px;">这是高精度压缩，基本上看不出任何瑕疵来。如果把高精度压缩的图和不压缩的情况做对比的话，其实肉眼是看不出什么差别，所以没有放这个图。</span></p>
<p style="text-align: center;"><img src="http://p5.itc.cn/q_70/images03/20201118/943763d1a8c245a48ce7e918b796a90b.png" /></p>
<p><span style="font-size: 16px;">上面的图是一个2K×2K的shadow texture，大小如果不压缩的话是在8MB，默认精度压缩大小变成了274.4KB，压缩率是29.85%。如果替换成高精度压缩，就是肉眼看不出差距的压缩，贴图大小变成了583.5KB，这种情况的压缩率还是有14%左右，所以还是相当不错的。</span></p>
<p style="text-align: center;"><img src="http://p0.itc.cn/q_70/images03/20201118/f51e77ddac2f4c4e9315bf3129514575.png" /></p>
<p><span style="font-size: 16px;">在搞好了Local Light以后，我们接下来为游戏添加了体积雾，体积雾是可以接受Local Light的照明影响，在灯的影响范围内形成一圈光晕，可以极大地提升画面的体积感。大家可以看到图里面近处的灯笼周围会有一圈泛光。包括画面远处的建筑物，因为笼罩在灯光下会使得周围的体积雾也被照亮，而显得有一丝的朦胧。</span></p>
<p style="text-align: center;"><img src="http://p1.itc.cn/q_70/images03/20201118/1cb277d796a645bfa985b7053c4e204b.png" /></p>
<p><span style="font-size: 16px;">这个图是一个更有意思的情况。如果我们给Local Light加一个projection texture，也就是我们通过这个贴图来控制Local Light光照的形状，就像右边这样，体积雾也会产生相应的变化。</span></p>
<p style="text-align: center;"><img src="http://p1.itc.cn/q_70/images03/20201118/a08010d4360c4d619eb0075541c001bd.png" /></p>
<p><span style="font-size: 16px;">我们的体积雾的计算是基于物理的。我们也支持通过不同的参数让体积雾在大世界里面的不同区域有不同的表现。体积雾支持Local Light，这个在前面已经展示过了。为了让体积雾更加稳定，画面更加细腻，我们给体积雾添加了Temporal filter，进行了多帧的混合。整体的GPU开销，也控制的不错，在PS4 Pro下面大致在1毫秒甚至更少。</span></p>
<p style="text-align: center;"><img src="http://p0.itc.cn/q_70/images03/20201118/c7010c5b15484ed2844b6dc528e078f9.png" /></p>
<p><span style="font-size: 16px;">大致的实现是这样的：首先是基于相机空间，我们把view frustum分成很多的voxel，这些voxel跟我们前面提到的clustered deferred lighting的clusters是对齐的，这样方便我们在后面对Local Light做scattering计算的时候进行一个加速。</span></p>
<p><span style="font-size: 16px;">前面提到的体积雾参数和Local Light的信息，都会被注入到这些voxel里面去，然后我们通过Ray marching的方式去计算体积雾。在这个时候，Local Light的信息就自然而然被考虑进去了。</span></p>
<p style="text-align: center;"><img src="http://p6.itc.cn/q_70/images03/20201118/b5ea1343075d4a6c9282cb7a48508563.png" /></p>
<p><span style="font-size: 16px;">有了体积雾，我们不得不提到God Ray效果，首先大家可以先看看游戏里面God Ray的表现。</span></p>
<p style="text-align: center;"><img src="http://p5.itc.cn/q_70/images03/20201118/fb008e3f94ad4b09919aca3adc48b12b.png" /></p>
<p style="text-align: center;"><img src="http://p2.itc.cn/q_70/images03/20201118/64ba8a57f4ef47ca91904fa34b611510.png" /></p>
<p><span style="font-size: 16px;">对于方向光进行遮挡就可以产生God Ray的效果，我们的做法是有一个单独的pass来生成God Ray，然后是在1/2×1/2分辨率下面。God Ray也是通过Ray marching的方式去生成的，我们会去采样shadow map，但是最多会采样5级的cascades。</span></p>
<p><span style="font-size: 16px;">God Ray生成完之后，我们会提供美术一些可以调整的参数，然后将God Ray的结果叠加到体积雾上面去。</span><span style="font-size: 16px;">它在使用上面，并不是一个物理上正确的东西，但是它的效果是能够让美术满意的。</span></p>
<p style="text-align: center;"><img src="http://p6.itc.cn/q_70/images03/20201118/f417a4077b4a4b63bed26fd41359be7c.png" /></p>
<p><span style="font-size: 16px;">了解体积雾的人可能会有一个问题，为什么要单独使用一个pass呢？体积雾本身就可以产生God Ray。这个就是一个很好的技术和美术磨合的例子，我们有体积雾直接生成的God Ray，在游戏里面实际效果其实不能够让美术满意。原因有两点，第一是分辨率不够，因为体积雾的分辨率是靠Voxel，而我们的Voxel是不会划分的特别精细的。第二是因为体积雾生成的God Ray强度是完全依赖于体积雾的浓度。</span></p>
<p><span style="font-size: 16px;">要想得到很明显的God Ray，就需要雾的浓度提的非常高。雾的浓度一旦提高了，画面就会显得不通透，太脏，这就是回到前面提到的两组词，这是美术不能够接受的。所以我们是采用了单独的pass去生成God Ray，这样可以得到更锐利、更清晰的效果，美术调整也更灵活。美术想要什么，我们就给他做什么。</span></p>
<p style="text-align: center;"><img src="http://p1.itc.cn/q_70/images03/20201118/f2f462c5e3354214b22cb187dc9983fa.png" /></p>
<p><span style="font-size: 16px;">下面给大家看看对比图，大家就能更好地体会到我说的是什么意思。这个God Ray就是通过体积雾生成的，包括整个画面的表现。</span></p>
<p style="text-align: center;"><img src="http://p7.itc.cn/q_70/images03/20201118/2d67a24868e04f89963aa75567832a89.png" /></p>
<p><span style="font-size: 16px;">这张是我们游戏里面现在使用的方式，就是单独的pass去生成，做一个对比。</span></p>
<p style="text-align: center;"><img src="http://p8.itc.cn/q_70/images03/20201118/67cae63770c942ea87951302ea656636.png" /></p>
<p><span style="font-size: 16px;">大家可以看到第一张God Ray不是很明显，而且画面雾的浓度非常高。而第二张图，God Ray会更清晰一些，而且整个画面是更加干净、更加通透，这就是美术想要的效果。</span></p>
<p><span style="font-size: 16px;">接下来是IBL</span><span style="font-size: 16px;">（Image Based Lighting）</span><span style="font-size: 16px;">系统，大家先看一下演示视频。图中左边的是Reflection probe</span><span style="font-size: 16px;">（反射探针）</span><span style="font-size: 16px;">，右边是Ambient probe，随着24小时的变化，我们的Reflection probe和Ambient probe的内容也会跟着变化。</span></p>
<p style="text-align: center;"><img src="http://p3.itc.cn/q_70/images03/20201118/bc29f1161ff842f081d40775781f3a9a.png" /></p>
<p style="text-align: center;"><img src="http://p7.itc.cn/q_70/images03/20201118/3bce85f45083473f91a599a8d32c6302.png" /></p>
<p style="text-align: center;"><img src="http://p0.itc.cn/q_70/images03/20201118/996d6769f8ef474db64072e5f8d3947e.png" /></p>
<p><span style="font-size: 16px;">我们先看一下左边的Reflection probe，Reflection probe是用来给场景提供反射信息的。因为游戏的光影不断变化，我们是不能够简单地为反射探针烘焙一张环境贴图作为反射信息之用。所以对于每一个Reflection probe，我们是烘焙了一个mini GBuffer。产生在游戏当中，根据当时的光照条件去实时生成环境贴图，美术可以在游戏里面摆很多个这样的Reflection probe，只要他们需要。</span></p>
<p style="text-align: center;"><img src="http://p2.itc.cn/q_70/images03/20201118/8ceae1c617604b41953164bfbcce4118.png" /></p>
<p><span style="font-size: 16px;">然后在运行的时候，我们会去更新场景的Reflection probe的cubemap。整个过程我们大致分为三步，第一步是Relight，第二步是Convolve和Compress。我们使用Compute Shader去同时处理六个面，然后分帧进行，同时只处理一个probe，不停地做循环。</span></p>
<p style="text-align: center;"><img src="http://p8.itc.cn/q_70/images03/20201118/df7fd928be4f4a928dc95fed8ebfde79.png" /></p>
<p><span style="font-size: 16px;">第一个步骤，就是Relight步骤，大家可以通过图能看出来，就是一个简单的把当前的光照环境用来照亮mini GBuffer，得到环境贴图的过程。</span></p>
<p style="text-align: center;"><img src="http://p1.itc.cn/q_70/images03/20201118/094367e63ceb49338ecc3458619b5cc2.png" /></p>
<p><span style="font-size: 16px;">然后生成的环境贴图，需要经过Convolve这一步，得到mipmap的正确信息。最后这个贴图需要再通过一个Compute Shader的做法，压缩成BC6H的格式，然后送到渲染管线里面去使用。大致是这么三步的过程。</span></p>
<p style="text-align: center;"><img src="http://p3.itc.cn/q_70/images03/20201118/67cddd735f584fbbb0ac41f05318efac.png" /></p>
<p><span style="font-size: 16px;">下面是我们的Ambient probe。Ambient probe也是实时生成的。</span></p>
<p style="text-align: center;"><img src="http://p6.itc.cn/q_70/images03/20201118/2e472ae60428480692a19e0ab85e1fbc.png" /></p>
<p><span style="font-size: 16px;">我们在做完Relight以后，Reflection probe是包含了当前的整个光照信息，我们可以从中提取出当前的Ambient的信息，并且把它转化成一个3阶的SH</span><span style="font-size: 16px;">（Spherical Harmonic）</span><span style="font-size: 16px;">系数保存下来。这个提取的过程，在我们把Reflection probe处理完成以后会自动进行，也是同时使用Compute Shader来处理六个面。</span></p>
<p style="text-align: center;"><img src="http://p0.itc.cn/q_70/images03/20201118/c39b2be10dc84ee385082cf81ad788b5.png" /></p>
<p><span style="font-size: 16px;">这么看下来，我们整个系统算是完成了，但实际上里面有很多地方是可以改进的。</span></p>
<p><span style="font-size: 16px;">第一个是Relight是没有阴影的，因为单靠mini GBuffer我们是没有办法在Relight pass生成阴影，这样会导致一个很大的问题。就是在Relight完成得到的环境贴图是漏光的，本来应该处于阴影当中的地面也会变得非常明亮。</span></p>
<p><span style="font-size: 16px;">通过这样的环境贴图算出的环境光</span><span style="font-size: 16px;">（ambient）</span><span style="font-size: 16px;">也会出现有问题的情况，那怎么解决呢？我们的做法是，我们把24小时的shadow都烘焙下来，就是隔一段时间我们烘焙一下，把shadow转化成一个shadow SH保存起来。在运行的时候简单通过当前的时间对shadow SH进行插值，用来压暗Relight以后的结果。</span></p>
<p><span style="font-size: 16px;">这样得到的效果是出乎意料的好，而且我们需要保存的数据非常的少。因为shadow SH很煳，所以我们做插值也没有什么大的问题。</span></p>
<p><span style="font-size: 16px;">同样的方式，我们还可以把Local Light的信息也保存下来，作为Local Light的SH在Relight的时候也加上去，这样可以得到非常好、非常廉价的一个Local Light 反弹的效果。</span></p>
<p style="text-align: center;"><img src="http://p6.itc.cn/q_70/images03/20201118/bd54ffcd8c7a49ca83a57e9b29d5ac66.png" /></p>
<p><span style="font-size: 16px;">大家可以看一下对比，这张图是没有添加shadow SH，这张是添加的，大家可以看到没添加的情况之下，屋檐和地面都莫名其妙的亮，添加之后就能够看出来是在阴影当中了，所以效果是很明显的。</span></p>
<p style="text-align: center;"><img src="http://p0.itc.cn/q_70/images03/20201118/234edc4b96e74bd58cbcdd30a4efa91e.png" /></p>
<p style="text-align: center;"><img src="http://p5.itc.cn/q_70/images03/20201118/24605d0f6fe44f5a937949928bec785f.png" /></p>
<p><span style="font-size: 16px;">下面是我们把Local Light SH加进去的情况对比。这是没有添加的，大家注意看一下画面右上角那片屋檐下面暗的区域，这是没有添加Local Light SH的情况。</span></p>
<p style="text-align: center;"><img src="http://p8.itc.cn/q_70/images03/20201118/b2fdec5e01b4416bb00e5ae32edbfa40.png" /></p>
<p><span style="font-size: 16px;">这是添加了的。那块区域被照亮了。</span></p>
<p style="text-align: center;"><img src="http://p0.itc.cn/q_70/images03/20201118/b7b94e3de3d346439b0dbbb3ff2fd863.png" /></p>
<p><span style="font-size: 16px;">我们现在已经解决了漏光的问题，并且添加了Local Light SH。接下来是一个室内室外光照环境不一致带来的问题，因为室内和室外的光照环境往往是很不一样的。如果不加区分的话，室内外的环境光</span><span style="font-size: 16px;">（ambient）</span><span style="font-size: 16px;">混在一起，得到的效果就很容易让人觉得不对劲。</span></p>
<p><span style="font-size: 16px;">我们是把Reflection probe分成室内、室外两种，然后美术通过摆放一个室内环境用的网格</span><span style="font-size: 16px;">（interior mesh）</span><span style="font-size: 16px;">来标记受室内光影响的像素。Ambient probe也会相应地为室内、室外生成不同的环境光。</span></p>
<p style="text-align: center;"><img src="http://p5.itc.cn/q_70/images03/20201118/55a051cd2eb946fba2ddb477aac4e215.png" /></p>
<p><span style="font-size: 16px;">下面看一下对比，这是没有开的情况，如果不区分的话，室内跟室外一样都会受天光的影响而变得很蓝，然后做了室内</span><span style="font-size: 16px;">（interior）</span><span style="font-size: 16px;">标记，室内的像素就能够正确地反应出室内的光照条件，会显得更黄一些。</span></p>
<p style="text-align: center;"><img src="http://p0.itc.cn/q_70/images03/20201118/210d8f1ebc814140a8371c962a0337f7.png" /></p>
<p style="text-align: center;"><img src="http://p4.itc.cn/q_70/images03/20201118/833b6c1fad84404bad02bfbb629a292c.png" /></p>
<p><span style="font-size: 16px;">而且我们还做了一个过度的处理，就是在门口这个区域当室内光照和室外光照环境切换的时候，不会出现一个因为明显的光照差异不一样而产生的硬边的效果。</span></p>
<p><span style="font-size: 16px;">下面这个就是室内环境用的网格</span><span style="font-size: 16px;">（interior mesh）</span><span style="font-size: 16px;">生成的Mask标记图，红色区域就是室内的区域，大家可以看一下对照关系。</span></p>
<p style="text-align: center;"><img src="http://p5.itc.cn/q_70/images03/20201118/d413e6b083cf4fb2b5dfe3f213ae2916.png" /></p>
<p><span style="font-size: 16px;">除了通过Reflection probe得到的反射，我们还有Screen space reflection来提供实时的反射信息。</span></p>
<p><span style="font-size: 16px;">SSR在PS4 Pro上面的GPU开销大概是在1.5毫秒左右，我们对SSR也加了一个Temporal filter，通过当前帧的SSR信息和历史信息混合起来，来提高SSR计算结果的稳定性，让画面也更平滑一些。为了得到更多的反射信息，我们为SSR生成了Hi-Z的buffer，我们可以让每条射线通过Hi-Z最多能够跟踪的距离达到整个屏幕。</span></p>
<p style="text-align: center;"><img src="http://p1.itc.cn/q_70/images03/20201118/e06239a4b77045a4930ff2300342da87.png" /></p>
<p><span style="font-size: 16px;">下面是一个SSR</span><span style="font-size: 16px;">（Screen space reflection）</span><span style="font-size: 16px;">效果开关的对比图，在比较光滑的地板上效果尤其明显。</span></p>
<p style="text-align: center;"><img src="http://p1.itc.cn/q_70/images03/20201118/ba5cd7a1413f4c6296c1f997eb69ce55.png" /></p>
<p style="text-align: center;"><img src="http://p9.itc.cn/q_70/images03/20201118/8d85bf4343b14d32878674afba5b5500.png" /></p>
<p><span style="font-size: 16px;">从前面的截图大家也能够看到，在没有SSR的情况之下，我们还有Reflection probe，它也是可以提供场景的反射信息。我们是使用了一个Deferred reflection pass来计算Reflection和Ambient信息。在计算Reflection的同时，我们把AO信息也考虑进去，这样可以有效地降低漏光。</span></p>
<p style="text-align: center;"><img src="http://p8.itc.cn/q_70/images03/20201118/b249ccf8188e44318fb29d8adaf05054.png" /></p>
<p><span style="font-size: 16px;">接下来是我们的最后一个技术点，HDR Display。这里面的HDR Display包含了两个方面，一个方面是指亮度，需要使用PQ ST2084的EOTF，最高是能够让画面亮度达到10000 nits。另外一方面就是在色彩空间这边，我们需要支持Rec.2020色彩空间，Rec.2020色彩空间和现在普遍的电视机使用的Rec.709相比，它可以显示的色彩范围要大得多。</span></p>
<p><span style="font-size: 16px;">大家可以看看在CIE 1931色度图里面的覆盖范围对比。Rec.2020色彩空间覆盖范围大概能达到75.8%，相比之下Rec.709只能在35.9%的样子。</span></p>
<p><span style="font-size: 16px;">在这里我们称使用了ST2084和Rec.2020色彩空间的渲染管线为HDR管线，而使用的Rec.709色彩空间的非HDR管线，我们把他们叫做SDR管线。关于HDR Display很多基础的信息，有很多人都已经讲过在这里面就不细讲了。下面主要讲一下，为了让这个技术放到《原神》里面去，我们做了哪些调整。</span></p>
<p style="text-align: center;"><img src="http://p9.itc.cn/q_70/images03/20201118/e1a317a85a314966ab5f4de0574d503b.png" /></p>
<p><span style="font-size: 16px;">下面这张图是《原神》的SDR和HDR的管线对比图，和SDR管线相比，HDR管线没有了tone mapping，color grading变成了HDR的color grading。而代替tone mapping的是RRT+ODT</span><span style="font-size: 16px;">（reference rendering transform + output display transform）</span><span style="font-size: 16px;">的组合，这就是很多人熟悉的ACES调色。</span></p>
<p><span style="font-size: 16px;">另外，UI在HDR下面，也是单独画到一张RT的。然后再跟场景做一个合并，这是因为UI的亮度处理方式跟场景是不太一样的。在图上大家看到RRT+ODT是灰掉的，我们待会会再来细讲这个事情。</span></p>
<p style="text-align: center;"><img src="http://p7.itc.cn/q_70/images03/20201118/cf356d7a037142598fdae5c2f291786b.png" /></p>
<p><span style="font-size: 16px;">《原神》从1.2开始，会在PS4上面支持HDR10的模式，然后替换SDR的Color grading是我们的HDR Color grading，美术会在Davinci这种软件上面去做HDR校色。然后通过我们的脚本输出HDR的Look-Up-Table</span><span style="font-size: 16px;">(LUT)</span><span style="font-size: 16px;">。</span></p>
<p><span style="font-size: 16px;">在运行的时候，白平衡HDR的Color grading，还有我们的Color expansion这些操作，都会在一个compute pass里面，输出到一张Color的Look-Up-Table里面去。因为这个Look-Up-Table很小，所以尽管前面提到的这些都是需要大量的计算操作，但实际上开销是很小的，大概不到0.05毫秒。</span></p>
<p><span style="font-size: 16px;">前面管线图的RRT+ODT部分是灰掉的，虽然这个是一个主流的调色方式，但是我们并没有采用它，因为和我们的游戏风格不太搭。所以尽管主流，我们还是放弃了。</span></p>
<p><span style="font-size: 16px;">为了保证在低亮度范围内的画面和SDR版本的游戏一致，我们将HDR的渲染画面和tone mapping处理之后的画面做了一个基于亮度的混合，然后在亮度不高的地方，就尽量保证了filmic tonemapping的关于toe部分的处理。</span></p>
<p style="text-align: center;"><img src="http://p7.itc.cn/q_70/images03/20201118/2d3a0200761948a59af61749bf0e0935.png" /></p>
<p><span style="font-size: 16px;">下面说一下在低亮度范围内一致性的问题，这里面涉及到OOTF的事情。前面我们提到在HDR上面是用了BT1886作为一个EOTF曲线，然后在设备处理游戏输出的时候会用到，相应的游戏在输出信号给电视机的时候也会增加一条曲线，这个就是OETF。然后在HDR的管线里面，实际上就是一条gamma曲线。</span></p>
<p><span style="font-size: 16px;">这里面存在一个问题，就是1886的gamma是2.4，但是SDR的OETF是一个分段函数，大致上可以看作是gamma 2.2，这就出现了一个问题，也就是在PPT上写的问题。OETF处理完的颜色，经过EOTF，它得到的并不是它本身，就产生了一个误差。</span></p>
<p><span style="font-size: 16px;">但是在HDR下面，因为我们OETF和EOTF是被很好的定义了的情况，所以他们是互逆的，于是这个颜色在经过这两个处理之后能够得到原来的颜色，所以在HDR下面没有这么一个问题。</span></p>
<p><span style="font-size: 16px;">而大家已经习惯了在HDR下面有这么一个误差的画面，所以为了模拟这个误差，我们是在HDR管线里面添加了OOTF，把差异给补上去了。</span></p>
<p style="text-align: center;"><img src="http://p6.itc.cn/q_70/images03/20201118/40db744395ca4d62b35e31e1b3f36f6e.png" /></p>
<p><span style="font-size: 16px;">做完这些，是不是HDR就彻底没问题了呢？并不是。这还有一个大坑，叫做Hue Shift。</span></p>
<p><span style="font-size: 16px;">什么解释一下什么是Hue Shift？举个例子，大家可以看一下游戏里面火焰制作的示意图，我们通过一个灰度图，就是下面像馒头一样的东西，加一个噪声贴图，然后进行扰动，得到了火焰扰动的纹理，然后我们用橘色去染色。</span></p>
<p><span style="font-size: 16px;">最后我们把火焰的整体亮度往上提，这个时候就得到大家可以看到的见证奇迹的时刻，在SDR下面因为有tone mapping的原因，tone mapping在亮部是有一条曲线的，会让亮度增加逐渐变慢，于是橘色的R通道跟G通道的差异本来是很大，但是随着亮度的增加，tone mapping曲线介入了，R通道的增长就变慢，G通道就逐渐赶了上来，于是就产生了Hue Shift，画面渐渐开始发黄，于是就得到了后面看到的SDR下面火焰的效果。</span></p>
<p><span style="font-size: 16px;">但这是美术想要的一个效果，只不过他是通过这种神奇的方式得到的。那么问题来了：因为在HDR下面，我们是没有tone mapping的，Hue Shift是不会发生的。它叫做Hue Preserving。R通道跟G通道的比例关系是得到一个保持的，所以能够得到亮度非常高的橘色。但是在视觉上，不会让人家觉得很明亮，因为没有黄色。</span></p>
<p style="text-align: center;"><img src="http://p2.itc.cn/q_70/images03/20201118/842ff0da9b23404b8acbf1803dc56101.png" /></p>
<p><span style="font-size: 16px;">那怎么去修改呢？一种常用的方法，也是很多大作都用的方法，叫做黑体辐射。这是一个基于物理的算法，美术去指定温度，根据温度计算出应该是什么颜色。通过这种方式，我们是需要修改美术的资源。不过我们没有采用这种方式，为什么？一方面是因为HDR 这个功能是在很后期才加入的，我们不能够让美术去大量修改已有的资源。</span></p>
<p><span style="font-size: 16px;">另外游戏并不是写实类的游戏，我们的火可以是各种颜色，而且还有很多其他的特效是随着元素反应去转换颜色的。所以我们自己搞了一个方法，我们在shader里面去模拟了Hue Shift，并且把模拟放到了color grading pass里面去，合并到Look-Up-Table的计算中。</span></p>
<p><span style="font-size: 16px;">这样的好处是，首先我们不需要修改任何的效果，得到的效果非常满意，我们不仅仅是让火焰特效在HDR下面的效果跟SDR几乎一致。而且因为通过引入tone mapping的方式模拟了Hue Shift，所以我们前面提到的在非HDR的亮度部分的画面一致性的问题，也被顺手解决掉了，不需要跟tone mapping处理之后的画面做混合。而且这个操作，也是在生成Look-Up-Table的时候去做的，所以它的性能增加是可以忽略不计的。</span></p>
<p style="text-align: center;"><img src="http://p3.itc.cn/q_70/images03/20201118/f2b1acb9757d4dadaa8d0052fd4e26c9.png" /></p>
<p><span style="font-size: 16px;">技术介绍我们就到这里介绍了，下面是我一些个人的总结和感想。</span></p>
<p><span style="font-size: 16px;">首先是全球玩家对《原神》主机版的接受程度之高是出乎我们的预料，非常诚惶诚恐，也非常的感慨。从零开始，我把PS4版做起来，看着它逐渐地变化，就像看着自己的孩子逐渐长大一样。随着PS版越做越完善，很多的小伙伴就逐渐加入了开发队伍中，于是PS4版变成了大家的孩子，大家努力让它变得更好，最后就怀着忐忑的心情送出来跟全球玩家见面。没想到现在这么受欢迎，所以是一件非常有成就感的事情。而且很开心，能够和这么好的团队一起做这个项目，后面我们也会继续努力，不断地改进，也不断地去优化，不断地出更好的内容给大家。</span></p>
<p><span style="font-size: 16px;">就像前面提到的，《原神》的主机版开发是第一次尝试，时间、资源和人才都很缺乏。通过一年多的开发，我们积累了很多的经验，尤其是如何把写实的渲染技术跟风格化游戏结合的经验，非常的宝贵！随着新的主机平台的到来，我们又面临了一大波的技术升级。不过和在美国的时候相比，国内主机开发的从业人员太少了，希望大家能够多多交流，和我们探讨一下技术，交流一下开发经验。</span></p>
<p><span style="font-size: 16px;">就我个人而言，在米哈游做游戏、做技术是一个非常不错的选择，我们也很热忱地邀请大家加入，尤其是加入主机团队，我们需要所有岗位的大佬，一起来做次世代的游戏。</span></p>
<p><span style="font-size: 16px;">最后是感谢！首先要感谢原神引擎团队的所有成员，也感谢所有为《原神》主机开发出了力的大佬们！其次还要感谢主机团队特别成员，每天被大家撸来撸去的lulu。最后是特别感谢陈文礼、Terry liu，以及各位Sony全球的技术支持专家，感谢你们在《原神》开发期间对项目的大力支持！</span></p>
<p style="text-align: center;"><img src="http://p7.itc.cn/q_70/images03/20201118/0a32e9088e5a4b4c83e75da109f8f53b.png" /></p>
<p><span style="font-size: 16px;">我这次的分享就结束了，感谢大家！</span></p>
<p><img src="http://p4.itc.cn/q_70/images03/20201118/d31278a82b2c49bea4925a91e62eadb0.png" /></p>
➜苹果新政：开发者收入低于100万美元，佣金减半至15％
http://www.sohu.com/a/432738903_204824	46729
<table>
<tbody>
<tr>
<td><span style="font-size: 16px;">省下一半佣金，开发者得以更专注于产品。</span></td>
</tr>
</tbody>
</table>
<p><span style="font-size: 16px;">文/龙之心</span></p>
<p><span style="font-size: 16px;">在App Store上，苹果一直以来都会向开发者收取30%的收入分成。而对于收入不高的小团队，他们未来将不用再支付这么高比例的佣金了。</span></p>
<p><span style="font-size: 16px;">根据苹果最新公布的开发者计划，</span><span style="font-size: 16px;">针对每年营收少于100万美元的⼩型企业和个体开发者，App Store佣⾦降⾄15%</span><span style="font-size: 16px;">，该计划将于2021年1⽉1⽇正式启动。</span></p>
<p><span style="font-size: 16px;">苹果方面表示，今年新冠疫情蔓延让全球经济遭遇挑战，中小企业和独立开发者面临的挑战更大，此举能够让他们省下一半的佣金，从而更专注于产品。</span></p>
<p><span style="font-size: 16px;">按照这套标准，</span><span style="font-size: 16px;">2020年所有App总收益最高达到100万美元的现有开发者，以及新加入App Store的开发者，可以参与本计划并享受降低的佣金费率；若开发者收益超过100万美元额度，则该年度剩余时间仍收取30%比例佣金；若收益在未来一年低于100万美元的额度，则可以在次年重新获得15%佣⾦的资格</span><span style="font-size: 16px;">。有关减少佣金条款的更多细节将在12月份透露。</span></p>
<p><span style="font-size: 16px;">App Store收入是苹果业务的重要组成部分，第四财季服务业务营收145.5亿美元，占该公司同期收入的22％。降低其App Store佣金率可能会损害该公司的财务业绩，但这种影响或许并不算大。</span></p>
<p><span style="font-size: 16px;">顺便一提的是，Google Play不久前刚刚表示会从2021年9月30日开始，强制对Google Play中的App内购抽成30%。Epic Games、Spotify、Tinder等多家开发商为此成立“应用公平性联盟”表示抗议。其中Epic和苹果之间在《堡垒之夜》支付方式上的冲突也持续至今。</span></p>
<p><span style="font-size: 16px;">延伸阅读： </span></p>
<p>Epic、苹果纠纷案新进展：法官驳回了苹果的“盗窃指控” </p>
<p>谷歌下发最后通牒：将对商店应用内购强制抽成30% </p>